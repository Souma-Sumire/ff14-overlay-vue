import"./index-01789691.js";/* empty css               */import{u as useWebSocket}from"./useWebSocket-9505a502.js";/* empty css               *//* empty css                */import{_ as __unplugin_components_0}from"./ThemeToggle-afc78d87.js";/* empty css                  */import{a as actorControlType,g as gameLogCodes,N as NetRegexes$1}from"./netregexes-ed180b06.js";import{c as callOverlayHandler,a as addOverlayListener}from"./overlay_plugin_api-974cdd44.js";import{U as UnreachableCode,R as Regexes$1}from"./regexes-da03e94d.js";import{d as data}from"./content_type-e6dd7239.js";import{d as data$1}from"./zone_id-712c4b9c.js";import{d as data$2}from"./zone_info-e69ac441.js";import{i as ElButton,t as ElRow,L as ElCol,s as ElCard,S as ElTag}from"./element-plus-e8d3f599.js";import{t as defineComponent,r as ref,v as createElementBlock,u as unref,A as createBaseVNode,J as createTextVNode,M as createVNode,K as toDisplayString,E as withCtx,x as openBlock,L as Fragment,a9 as renderList,G as normalizeClass,D as createBlock}from"./vue-vendor-d1e06839.js";import{_ as _export_sfc}from"./_plugin-vue_export-helper-6a8c15be.js";import"./index-2ddc6e0c.js";const languages=["en","de","fr","ja","cn","ko"],isLang=e=>void 0!==e&&languages.includes(e),langToLocale=e=>({en:"en",de:"de",fr:"fr",ja:"ja",cn:"zh-CN",ko:"ko"}[e]),_Conditions={targetIsYou:()=>(e,t)=>e.me===t?.target,targetIsNotYou:()=>(e,t)=>e.me!==t?.target,caresAboutAOE:()=>e=>"tank"===e.role||"healer"===e.role||e.CanAddle()||e.CanFeint()||"BLU"===e.job,caresAboutMagical:()=>e=>"tank"===e.role||"healer"===e.role||e.CanAddle()||"BLU"===e.job,caresAboutPhysical:()=>e=>"tank"===e.role||"healer"===e.role||e.CanFeint()||"BLU"===e.job},numberToOutputString=function(e){const t=e.toString();return{en:t,de:t,fr:t,ja:t,cn:t,ko:t}},_Outputs={aoe:{en:"AoE",de:"AoE",fr:"AoE",ja:"全体攻撃",cn:"AoE",ko:"전체 공격"},bigAoe:{en:"big AoE!",de:"Große AoE!",fr:"Grosse AoE !",ja:"強力な全体攻撃",cn:"大AoE伤害！",ko:"강한 전체 공격!"},bleedAoe:{en:"AoE + Bleed",de:"AoE + Blutung",fr:"AoE + Saignement",ja:"全体攻撃 + DoT",cn:"AOE + 流血",ko:"전체 공격 + 도트"},tankBuster:{en:"Tank Buster",de:"Tank buster",fr:"Tank buster",ja:"タンク強攻撃",cn:"坦克死刑",ko:"탱버"},miniBuster:{en:"Mini Buster",de:"Kleiner Tankbuster",fr:"Mini Buster",ja:"タンク攻撃",cn:"小死刑",ko:"약한 탱버"},tankBusterOnPlayer:{en:"Tank Buster on ${player}",de:"Tank buster auf ${player}",fr:"Tank buster sur ${player}",ja:"${player}に強攻撃",cn:"死刑 点 ${player}",ko:'"${player}" 탱버'},tankBusterOnYou:{en:"Tank Buster on YOU",de:"Tank buster auf DIR",fr:"Tank buster sur VOUS",ja:"自分に強攻撃",cn:"死刑点名",ko:"탱버 대상자"},tankBusters:{en:"Tank Busters",de:"Tank busters",fr:"Tank busters",ja:"タンク強攻撃",cn:"坦克死刑",ko:"탱버"},tetherBusters:{en:"Tank Tethers",de:"Tank-Verbindungen",fr:"Liens Tank",ja:"タンク線取り",cn:"坦克截线",ko:"탱커가 선 가로채기"},avoidTetherBusters:{en:"Avoid Tank Tethers",de:"Vermeide Tank Verbindungen",fr:"Évitez les liens des Tanks",ja:"タンクの線を避けて",cn:"远离坦克连线",ko:"탱커 선 피하기"},tankCleave:{en:"Tank Cleave",de:"Tank Cleave",fr:"Tank cleave",ja:"タンク範囲攻撃",cn:"范围死刑",ko:"광역 탱버"},tankBusterCleaves:{en:"Tank Buster Cleaves",de:"Tankbuster Cleaves",fr:"Tankbuster cleaves",ja:"MT・ST同時範囲攻撃",cn:"坦克范围死刑",ko:"동시 광역 탱버"},tankBusterCleavesOnYou:{en:"Tank Cleaves on YOU",de:"Tank Cleaves auf DIR",fr:"Tank cleaves sur VOUS",ja:"MT・ST同時範囲攻撃(自分対象)",cn:"坦克范围死刑点名",ko:"광역 탱버 대상자"},avoidTankCleave:{en:"Avoid Tank Cleave",de:"Tank Cleave ausweichen",fr:"Évitez le tank cleave",ja:"タンク範囲攻撃を避ける",cn:"远离范围死刑",ko:"광역 탱버 피하기"},avoidTankCleaves:{en:"Avoid Tank Cleaves",de:"Tankbuster Cleaves ausweichen",fr:"Évitez les cleaves (tankbusters)",ja:"範囲攻撃を避けて",cn:"远离坦克范围死刑",ko:"광역 탱버 피하기"},tankCleaveOnYou:{en:"Tank Cleave on YOU",de:"Tank Cleave aud DIR",fr:"Tank cleave sur VOUS",ja:"自分に範囲攻撃",cn:"范围死刑点名",ko:"나에게 광역 탱버"},sharedTankbuster:{en:"Shared Tank Buster",de:"Geteilter Tankbuster",fr:"Partagez le Tank buster",ja:"タンク頭割り",cn:"分摊死刑",ko:"쉐어 탱버"},sharedTankbusterOnYou:{en:"Shared Tank Buster on YOU",de:"geteilter Tankbuster auf DIR",fr:"Tank buster à partager sur VOUS",ja:"自分にタンク頭割り",cn:"分摊死刑点名",ko:"쉐어 탱버 대상자"},sharedTankbusterOnPlayer:{en:"Shared Tank Buster on ${player}",de:"geteilter Tankbuster on ${player}",fr:"Tank buster à partager sur ${player}",ja:"${player} にタンク頭割り",cn:"分摊死刑点 ${player}",ko:'"${player}" 쉐어 탱버'},tankSwap:{en:"Tank Swap!",de:"Tankwechsel!",fr:"Tank swap !",ja:"タンクスイッチ!",cn:"换T！",ko:"탱 교대"},spread:{en:"Spread",de:"Verteilen",fr:"Dispersez-vous",ja:"さんかい",cn:"分散",ko:"산개"},defamationOnYou:{en:"Defamation on YOU",de:"Ehrenstrafe aud DIR",fr:"Diffamation sur VOUS",ja:"自分に巨大な爆発",cn:"大圈点名",ko:"광역징 대상자"},protean:{en:"Protean",de:"Himmelsrichtungen",fr:"Positions",ja:"基本さんかい",cn:"八方分散",ko:"8방향 산개"},stackMarker:{en:"Stack",de:"Sammeln",fr:"Packez-vous",ja:"頭割り",cn:"分摊",ko:"쉐어뎀"},getTogether:{en:"Stack",de:"Sammeln",fr:"Packez-vous",ja:"集合",cn:"集合",ko:"모이기"},healerGroups:{en:"Healer Groups",de:"Heiler-Gruppen",fr:"Groupes sur les heals",ja:"ヒラに頭割り",cn:"双奶分组分摊",ko:"힐러 그룹 쉐어"},rolePositions:{en:"Role Positions",de:"Rollenposition",fr:"Positions par rôle",ja:"ロールさんかい",cn:"职能分散站位",ko:"직업군별 위치로"},stackOnYou:{en:"Stack on YOU",de:"Auf DIR sammeln",fr:"Package sur VOUS",ja:"自分に頭割り",cn:"分摊点名",ko:"쉐어징 대상자"},stackOnPlayer:{en:"Stack on ${player}",de:"Auf ${player} sammeln",fr:"Packez-vous sur ${player}",ja:"${player}に頭割り",cn:"靠近 ${player}分摊",ko:'"${player}" 쉐어징'},stackPartner:{en:"Stack With Partner",de:"Mit Partner stacken",fr:"Packez-vous avec votre partenaire",ja:"ペア",cn:"与搭档分摊",ko:"파트너와 쉐어"},stackMiddle:{en:"Stack in Middle",de:"In der Mitte sammeln",fr:"Packez-vous au milieu",ja:"中央で頭割り",cn:"中间集合",ko:"중앙에서 쉐어"},baitPuddles:{en:"Bait Puddles",de:"Flächen Ködern",fr:"Attirez les flaques",ja:"AOE誘導",cn:"诱导放圈",ko:"장판 유도"},stacks:{en:"Stacks",de:"Sammeln",fr:"Package",ja:"頭割り",cn:"分摊",ko:"쉐어"},doritoStack:{en:"Dorito Stack",de:"Mit Marker sammeln",fr:"Packez les marques",ja:"マーカー同士で頭割り",cn:"点名集合",ko:"징끼리 모이기"},spreadThenStack:{en:"Spread => Stack",de:"Verteilen => Sammeln",fr:"Dispersion => Package",ja:"さんかい => 頭割り",cn:"分散 => 集合",ko:"산개 => 집합"},stackThenSpread:{en:"Stack => Spread",de:"Sammeln => Verteilen",fr:"Package => Dispersion",ja:"頭割り => さんかい",cn:"集合 => 分散",ko:"집합 => 산개"},drawIn:{en:"Draw In",de:"Einzug",fr:"Attraction",ja:"吸込み",cn:"吸引",ko:"끌어당김"},knockback:{en:"Knockback",de:"Rückstoß",fr:"Poussée",ja:"ノックバック",cn:"击退",ko:"넉백"},knockbackOnYou:{en:"Knockback on YOU",de:"Rückstoß auf DIR",fr:"Poussée sur VOUS",ja:"自分にノックバック",cn:"击退点名",ko:"넉백징 대상자"},knockbackOnPlayer:{en:"Knockback on ${player}",de:"Rückstoß auf ${player}",fr:"Poussée sur ${player}",ja:"${player}にノックバック",cn:"击退点名${player}",ko:'"${player}" 넉백징'},lookTowardsBoss:{en:"Look Towards Boss",de:"Anschauen Boss",fr:"Regardez le boss",ja:"ボスを見る",cn:"面向Boss",ko:"쳐다보기"},lookAway:{en:"Look Away",de:"Wegschauen",fr:"Regardez ailleurs",ja:"ボスを見ない",cn:"背对Boss",ko:"뒤돌기"},lookAwayFromPlayer:{en:"Look Away from ${player}",de:"Schau weg von ${player}",fr:"Ne regardez pas ${player}",ja:"${player}を見ない",cn:"背对${player}",ko:"${player}에게서 뒤돌기"},lookAwayFromTarget:{en:"Look Away from ${name}",de:"Schau weg von ${name}",fr:"Ne regardez pas ${name}",ja:"${name}を見ない",cn:"背对${name}",ko:"${name}에게서 뒤돌기"},getBehind:{en:"Get Behind",de:"Hinter ihn",fr:"Passez derrière",ja:"背面へ",cn:"去背后",ko:"보스 뒤로"},goFrontOrSides:{en:"Go Front / Sides",de:"Gehe nach Vorne/ zu den Seiten",fr:"Allez Devant / Côtés",ja:"前／横へ",cn:"去前侧方",ko:"보스 후방 피하기"},goFront:{en:"Go Front",de:"Geh nach vorn",fr:"Allez Devant",ja:"前へ",cn:"去前面",ko:"앞으로"},getUnder:{en:"Get Under",de:"Unter ihn",fr:"En dessous",ja:"ボスに貼り付く",cn:"去脚下",ko:"보스 아래로"},in:{en:"In",de:"Rein",fr:"Intérieur",ja:"中へ",cn:"靠近",ko:"안으로"},out:{en:"Out",de:"Raus",fr:"Extérieur",ja:"外へ",cn:"远离",ko:"밖으로"},outOfMelee:{en:"Out of Melee",de:"Raus aus Nahkampf",fr:"Sortez de la mêlée",ja:"近接の範囲から離れる",cn:"离开近战距离",ko:"근접범위 밖으로"},outOfHitbox:{en:"Out of Hitbox",de:"Raus aus der Hitbox",fr:"Extérieur de la hitbox",ja:"ボスから少し離れる",cn:"离开目标圈",ko:"히트박스 밖으로"},inThenOut:{en:"In => Out",de:"Rein, dann raus",fr:"Intérieur, puis extérieur",ja:"中 => 外",cn:"先靠近，再远离",ko:"안으로 => 밖으로"},outThenIn:{en:"Out => In",de:"Raus, dann rein",fr:"Extérieur, puis intérieur",ja:"外 => 中",cn:"先远离，再靠近",ko:"밖으로 => 안으로"},backThenFront:{en:"Back => Front",de:"Nach Hinten, danach nach Vorne",fr:"Derrière puis devant",ja:"後ろ => 前",cn:"后 => 前",ko:"뒤로 => 앞으로"},frontThenBack:{en:"Front => Back",de:"Nach Vorne, danach nach Hinten",fr:"Devant puis derrière",ja:"前 => 後ろ",cn:"前 => 后",ko:"앞으로 => 뒤로"},sidesThenFrontBack:{en:"Sides => Front/Back",cn:"两侧 => 前/后",ko:"양옆 => 앞/뒤"},frontBackThenSides:{en:"Front/Back => Sides",cn:"前/后 => 两侧",ko:"앞/뒤 => 양옆"},goIntoMiddle:{en:"Get Middle",de:"in die Mitte gehen",fr:"Allez au milieu",ja:"中へ",cn:"去中间",ko:"중앙으로"},front:{en:"Front",de:"Vorne",fr:"Devant",ja:"前",cn:"前",ko:"앞"},back:{en:"Back",de:"Hinten",fr:"Derrière",ja:"後ろ",cn:"后",ko:"뒤"},right:{en:"Right",de:"Rechts",fr:"À droite",ja:"右へ",cn:"右",ko:"오른쪽"},left:{en:"Left",de:"Links",fr:"À gauche",ja:"左へ",cn:"左",ko:"왼쪽"},getLeftAndWest:{en:"<= Get Left/West",de:"<= Nach Links/Westen",fr:"<= Allez à Gauche/Ouest",ja:"<= 左/西へ",cn:"<= 去左半场",ko:"<= 왼쪽/서쪽"},getRightAndEast:{en:"Get Right/East =>",de:"Nach Rechts/Osten =>",fr:"Allez à Droite/Est =>",ja:"右/東へ =>",cn:"去右半场 =>",ko:"오른쪽/동쪽 =>"},leftThenRight:{en:"Left => Right",de:"Links => Rechts",fr:"À gauche => À droite",ja:"左 => 右",cn:"左 => 右",ko:"왼쪽 => 오른쪽"},rightThenLeft:{en:"Right => Left",de:"Rechts => Links",fr:"À droite => À gauche",ja:"右 => 左",cn:"右 => 左",ko:"오른쪽 => 왼쪽"},goFrontBack:{en:"Go Front/Back",de:"Geh nach Vorne/Hinten",fr:"Allez Devant/Derrière",ja:"縦へ",cn:"去前后",ko:"앞/뒤로"},sides:{en:"Sides",de:"Seiten",fr:"Côtés",ja:"横へ",cn:"去两侧",ko:"양옆으로"},middle:{en:"Middle",de:"Mitte",fr:"Milieu",ja:"中へ",cn:"中间",ko:"중앙"},clockwise:{en:"Clockwise",de:"Im Uhrzeigersinn",fr:"Sens horaire",ja:"時計回り",cn:"顺时针",ko:"시계방향"},counterclockwise:{en:"Counter-Clockwise",de:"Gegen den Uhrzeigersinn",fr:"Anti-horaire",ja:"反時計回り",cn:"逆时针",ko:"반시계방향"},killAdds:{en:"Kill Adds",de:"Adds besiegen",fr:"Tuez les adds",ja:"雑魚から倒して",cn:"击杀小怪",ko:"쫄 잡기"},killExtraAdd:{en:"Kill Extra Add",de:"Add besiegen",fr:"Tuez l'add",ja:"雑魚から倒して",cn:"击杀小怪",ko:"쫄 잡기"},awayFromFront:{en:"Away From Front",de:"Weg von Vorne",fr:"Éloignez-vous du devant",ja:"前方から離れる",cn:"远离正面",ko:"보스 전방 피하기"},sleepTarget:{en:"Sleep ${name}",de:"Schlaf auf ${name}",fr:"Sommeil sur ${name}",ja:"${name} にスリプル",cn:"催眠 ${name}",ko:"${name} 슬리플"},stunTarget:{en:"Stun ${name}",de:"Betäubung auf ${name}",fr:"Étourdissez ${name}",ja:"${name} にスタン",cn:"眩晕 ${name}",ko:"${name} 기절"},interruptTarget:{en:"Interrupt ${name}",de:"unterbreche ${name}",fr:"Interrompez ${name}",ja:"${name} に沈黙",cn:"打断${name}",ko:"${name} 시전 끊기"},preyOnYou:{en:"Prey on YOU",de:"Marker auf DIR",fr:"Marquage sur VOUS",ja:"自分にマーキング",cn:"猎物点名",ko:"홍옥징 대상자"},preyOnPlayer:{en:"Prey on ${player}",de:"Marker auf ${player}",fr:"Marquage sur ${player}",ja:"${player}にマーキング",cn:"${player} 的猎物点名",ko:'"${player}" 홍옥징'},awayFromGroup:{en:"Away from Group",de:"Weg von der Gruppe",fr:"Éloignez-vous du groupe",ja:"外へ",cn:"远离人群",ko:"다른 사람들과 떨어지기"},awayFromPlayer:{en:"Away from ${player}",de:"Weg von ${player}",fr:"Éloignez-vous de ${player}",ja:"${player}から離れる",cn:"远离${player}",ko:'"${player}"에게서 멀어지기'},meteorOnYou:{en:"Meteor on YOU",de:"Meteor auf DIR",fr:"Météore sur VOUS",ja:"自分にメテオ",cn:"陨石点名",ko:"나에게 메테오징"},stopMoving:{en:"Stop Moving!",de:"Bewegung stoppen!",fr:"Ne bougez pas !",ja:"移動禁止！",cn:"停止移动！",ko:"이동 멈추기!"},stopEverything:{en:"Stop Everything!",de:"Stoppe Alles!",fr:"Arrêtez tout !",ja:"行動禁止！",cn:"停止行动！",ko:"행동 멈추기!"},moveAway:{en:"Move!",de:"Bewegen!",fr:"Bougez !",ja:"避けて！",cn:"离开原地！",ko:"이동하기!"},moveAround:{en:"Move!",de:"Bewegen!",fr:"Bougez !",ja:"動く！",cn:"保持运动！",ko:"움직이기!"},breakChains:{en:"Break Chains",de:"Kette zerbrechen",fr:"Brisez les chaines",ja:"線を切る",cn:"拉断连线",ko:"선 끊기"},moveChainsTogether:{en:"Move Chains Together",de:"Ketten zusammen bewegen",fr:"Bougez les chaines ensemble",ja:"線同士で一緒に移動",cn:"连线一起移动",ko:"선 붙어서 같이 움직이기"},earthshakerOnYou:{en:"Earth Shaker on YOU",de:"Erdstoß auf DIR",fr:"Marque de terre sur VOUS",ja:"自分にアースシェイカー",cn:"大地摇动点名",ko:"어스징 대상자"},wakeUp:{en:"WAKE UP",de:"AUFWACHEN",fr:"RÉVEILLE-TOI",ja:"目を覚まして！",cn:"醒醒！动一动！！",ko:"일어나세요!"},closeTethersWithPlayer:{en:"Close Tethers (${player})",de:"Nahe Verbindungen (${player})",fr:"Liens proches avec (${player})",ja:"${player}に近づく",cn:"近线 (${player})",ko:"상대와 가까이 붙기 (${player})"},farTethersWithPlayer:{en:"Far Tethers (${player})",de:"Entfernte Verbindungen (${player})",fr:"Liens éloignés avec (${player})",ja:" (${player})から離れる",cn:"远线 (${player})",ko:"상대와 떨어지기 (${player})"},getTowers:{en:"Get Towers",de:"Türme nehmen",fr:"Allez dans les tours",ja:"塔を踏む",cn:"踩塔",ko:"기둥 들어가기"},unknown:{en:"???",de:"???",fr:"???",ja:"???",cn:"???",ko:"???"},cardinals:{en:"Cardinals",de:"Kardinal",fr:"Cardinaux",ja:"十字回避",cn:"去正点",ko:"십자방향으로"},intercards:{en:"Intercards",de:"Interkardinal",fr:"Intercardinal",ja:"斜めへ",cn:"去斜角",ko:"대각선 쪽으로"},north:{en:"North",de:"Norden",fr:"Nord",ja:"北",cn:"上",ko:"북쪽"},south:{en:"South",de:"Süden",fr:"Sud",ja:"南",cn:"下",ko:"남쪽"},east:{en:"East",de:"Osten",fr:"Est",ja:"東",cn:"右",ko:"동쪽"},west:{en:"West",de:"Westen",fr:"Ouest",ja:"西",cn:"左",ko:"서쪽"},northwest:{en:"Northwest",de:"Nordwesten",fr:"Nord-Ouest",ja:"北西",cn:"左上",ko:"북서쪽"},northeast:{en:"Northeast",de:"Nordosten",fr:"Nord-Est",ja:"北東",cn:"右上",ko:"북동쪽"},southwest:{en:"Southwest",de:"Südwesten",fr:"Sud-Ouest",ja:"南西",cn:"左下",ko:"남서쪽"},southeast:{en:"Southeast",de:"Südosten",fr:"Sud-Est",ja:"南東",cn:"右下",ko:"남동쪽"},dirN:{en:"N",de:"N",fr:"N",ja:"北",cn:"上",ko:"북"},dirS:{en:"S",de:"S",fr:"S",ja:"南",cn:"下",ko:"남"},dirE:{en:"E",de:"O",fr:"E",ja:"東",cn:"右",ko:"동"},dirW:{en:"W",de:"W",fr:"O",ja:"西",cn:"左",ko:"서"},dirNW:{en:"NW",de:"NW",fr:"NO",ja:"北西",cn:"左上",ko:"북서"},dirNE:{en:"NE",de:"NO",fr:"NE",ja:"北東",cn:"右上",ko:"북동"},dirSW:{en:"SW",de:"SW",fr:"SO",ja:"南西",cn:"左下",ko:"남서"},dirSE:{en:"SE",de:"SO",fr:"SE",ja:"南東",cn:"右下",ko:"남동"},dirNNE:{en:"NNE",de:"NNO",fr:"NNE",ja:"北北東(1時)",cn:"上偏右",ko:"1시"},dirENE:{en:"ENE",de:"ONO",fr:"ENE",ja:"東北東(2時)",cn:"右偏上",ko:"2시"},dirESE:{en:"ESE",de:"OSO",fr:"ESE",ja:"東南東(4時)",cn:"右偏下",ko:"4시"},dirSSE:{en:"SSE",de:"SSO",fr:"SSE",ja:"南南東(5時)",cn:"下偏右",ko:"5시"},dirSSW:{en:"SSW",de:"SSW",fr:"SSO",ja:"南南西(7時)",cn:"下偏左",ko:"7시"},dirWSW:{en:"WSW",de:"WSW",fr:"OSO",ja:"西南西(8時)",cn:"左偏下",ko:"8시"},dirWNW:{en:"WNW",de:"WNW",fr:"ONO",ja:"西北西(10時)",cn:"左偏上",ko:"10시"},dirNNW:{en:"NNW",de:"NNW",fr:"NNO",ja:"北北西(11時)",cn:"上偏左",ko:"11시"},tank:{en:"Tank",de:"Tank",fr:"Tank",ja:"タンク",cn:"坦克",ko:"탱"},healer:{en:"Healer",de:"Heiler",fr:"Healer",ja:"ヒーラー",cn:"治疗",ko:"힐"},dps:{en:"DPS",de:"DPS",fr:"DPS",ja:"DPS",cn:"DPS",ko:"딜러"},next:{en:" => ",de:" => ",fr:" => ",ja:" => ",cn:" => ",ko:" => "},and:{en:" + ",de:" + ",fr:" + ",ja:" + ",cn:" + ",ko:" + "},or:{en:" / ",de:" / ",fr:" / ",ja:" / ",cn:" / ",ko:" / "},num0:numberToOutputString(0),num1:numberToOutputString(1),num2:numberToOutputString(2),num3:numberToOutputString(3),num4:numberToOutputString(4),num5:numberToOutputString(5),num6:numberToOutputString(6),num7:numberToOutputString(7),num8:numberToOutputString(8),num9:numberToOutputString(9)},severityMap={info:"infoText",alert:"alertText",alarm:"alarmText"},getText=e=>{if(!(e in severityMap))throw new Error(`Invalid severity: ${e}.`);return severityMap[e]},defaultInfoText=e=>e?getText(e):"infoText",defaultAlertText=e=>e?getText(e):"alertText",defaultAlarmText=e=>e?getText(e):"alarmText",getTarget=e=>{if(e.target!==e.source&&""!==e.target)return e.target},getSource=e=>e?.source,combineFuncs=function(e,t,a,n){const r={};return e!==a?(r[e]=t,r[a]=n):r[e]=(e,a,r)=>t(e,a,r)??n(e,a,r),r},isPlayerId=e=>void 0!==e&&!e.startsWith("4"),staticResponse=(e,t)=>(a,n,r)=>(r.responseOutputStrings={text:t},{[e]:(e,t,a)=>a.text?.()}),Responses$1={tankBuster:(e,t)=>{const a={noTarget:_Outputs.tankBuster,busterOnYou:_Outputs.tankBusterOnYou,busterOnTarget:_Outputs.tankBusterOnPlayer},n=combineFuncs(defaultAlertText(e),(e,t,a)=>{const n=getTarget(t);if(void 0===n){if("tank"!==e.role&&"healer"!==e.role)return;return a.noTarget?.()}if(n===e.me)return a.busterOnYou?.()},defaultInfoText(t),(e,t,a)=>{const n=getTarget(t);if(void 0===n){if("tank"===e.role||"healer"===e.role)return;return a.noTarget?.()}if(n!==e.me)return a.busterOnTarget?.({player:e.party.member(n)})});return(e,t,r)=>(r.responseOutputStrings=a,n)},tankBusterSwap:(e,t)=>{const a={noTarget:_Outputs.tankBuster,tankSwap:_Outputs.tankSwap,busterOnYou:_Outputs.tankBusterOnYou,busterOnTarget:_Outputs.tankBusterOnPlayer},n=combineFuncs(defaultAlarmText(t),(e,t,a)=>{const n=getTarget(t);if("tank"===e.role&&n!==e.me)return a.tankSwap?.()},defaultAlertText(e),(e,t,a)=>{const n=getTarget(t);if("tank"!==e.role||n===e.me)return n===e.me?a.busterOnYou?.():void 0===n?a.noTarget?.():a.busterOnTarget?.({player:e.party.member(n)})});return(e,t,r)=>(r.responseOutputStrings=a,n)},tankCleave:e=>(t,a,n)=>(n.responseOutputStrings={cleaveOnYou:_Outputs.tankCleaveOnYou,cleaveNoTarget:_Outputs.tankCleave,avoidCleave:_Outputs.avoidTankCleave},{[defaultInfoText(e)]:(e,t,a)=>getTarget(t)===e.me?a.cleaveOnYou?.():"tank"===e.role||"BLU"===e.job?a.cleaveNoTarget?.():a.avoidCleave?.()}),sharedTankBuster:(e,t)=>{const a={sharedTankbusterOnYou:_Outputs.sharedTankbusterOnYou,sharedTankbusterOnTarget:_Outputs.sharedTankbusterOnPlayer,sharedTankbuster:_Outputs.sharedTankbuster,avoidCleave:_Outputs.avoidTankCleave},n=combineFuncs(defaultAlertText(e),(e,t,a)=>{const n=getTarget(t);if(void 0===n){if("tank"!==e.role&&"healer"!==e.role)return;return a.sharedTankbuster?.()}return n===e.me?a.sharedTankbusterOnYou?.():"tank"===e.role||"healer"===e.role?a.sharedTankbusterOnTarget?.({player:e.party.member(n)}):void 0},defaultInfoText(t),(e,t,a)=>{const n=getTarget(t);if(void 0===n){if("tank"===e.role||"healer"===e.role)return;return a.avoidCleave?.()}if(n!==e.me&&"tank"!==e.role&&"healer"!==e.role)return a.avoidCleave?.()});return(e,t,r)=>(r.responseOutputStrings=a,n)},miniBuster:e=>staticResponse(defaultInfoText(e),_Outputs.miniBuster),aoe:e=>staticResponse(defaultInfoText(e),_Outputs.aoe),bigAoe:e=>staticResponse(defaultInfoText(e),_Outputs.bigAoe),bleedAoe:e=>staticResponse(defaultInfoText(e),_Outputs.bleedAoe),spread:e=>staticResponse(defaultInfoText(e),_Outputs.spread),protean:e=>staticResponse(defaultInfoText(e),_Outputs.protean),stackMarker:e=>staticResponse(defaultAlertText(e),_Outputs.stackMarker),getTogether:e=>staticResponse(defaultAlertText(e),_Outputs.getTogether),stackMarkerOn:e=>(t,a,n)=>(n.responseOutputStrings={stackOnYou:_Outputs.stackOnYou,stackOnTarget:_Outputs.stackOnPlayer,stackMarker:_Outputs.stackMarker},{[defaultAlertText(e)]:(e,t,a)=>{const n=getTarget(t);return n===e.me?a.stackOnYou?.():void 0===n?a.stackMarker?.():a.stackOnTarget?.({player:e.party.member(n)})}}),stackMiddle:e=>staticResponse(defaultInfoText(e),_Outputs.stackMiddle),doritoStack:e=>staticResponse(defaultAlertText(e),_Outputs.doritoStack),spreadThenStack:e=>staticResponse(defaultAlertText(e),_Outputs.spreadThenStack),stackThenSpread:e=>staticResponse(defaultAlertText(e),_Outputs.stackThenSpread),knockback:e=>staticResponse(defaultAlertText(e),_Outputs.knockback),knockbackOn:(e,t)=>{const a={knockback:_Outputs.knockback,knockbackOnYou:_Outputs.knockbackOnYou,knockbackOnTarget:_Outputs.knockbackOnPlayer},n=combineFuncs(defaultInfoText(e),(e,t,a)=>{if(getTarget(t)===e.me)return a.knockbackOnYou?.()},defaultInfoText(t),(e,t,a)=>{const n=getTarget(t);return void 0===n?a.knockback?.():n!==e.me?a.knockbackOnTarget?.({player:e.party.member(n)}):void 0});return(e,t,r)=>(r.responseOutputStrings=a,n)},drawIn:e=>staticResponse(defaultInfoText(e),_Outputs.drawIn),lookTowards:e=>staticResponse(defaultInfoText(e),_Outputs.lookTowardsBoss),lookAway:e=>staticResponse(defaultInfoText(e),_Outputs.lookAway),lookAwayFromTarget:e=>(t,a,n)=>(n.responseOutputStrings={lookAway:_Outputs.lookAway,lookAwayFrom:_Outputs.lookAwayFromTarget},{[defaultAlertText(e)]:(e,t,a)=>{const n=getTarget(t);if(n===e.me)return;if(void 0===n)return a.lookAway?.();const r=isPlayerId(t?.targetId)?e.party.member(n):n;return a.lookAwayFrom?.({name:r})}}),lookAwayFromSource:e=>(t,a,n)=>(n.responseOutputStrings={lookAwayFrom:_Outputs.lookAwayFromTarget},{[defaultAlertText(e)]:(e,t,a)=>{const n=getSource(t);if(n===e.me)return;const r=isPlayerId(t?.sourceId)?e.party.member(n):n;return a.lookAwayFrom?.({name:r})}}),getBehind:e=>staticResponse(defaultAlertText(e),_Outputs.getBehind),goFrontOrSides:e=>staticResponse(defaultAlertText(e),_Outputs.goFrontOrSides),getUnder:e=>staticResponse(defaultInfoText(e),_Outputs.getUnder),getIn:e=>staticResponse(defaultAlertText(e),_Outputs.in),getOut:e=>staticResponse(defaultAlertText(e),_Outputs.out),outOfMelee:e=>staticResponse(defaultInfoText(e),_Outputs.outOfMelee),getInThenOut:e=>staticResponse(defaultInfoText(e),_Outputs.inThenOut),getIntercards:e=>staticResponse(defaultAlertText(e),_Outputs.intercards),getOutThenIn:e=>staticResponse(defaultInfoText(e),_Outputs.outThenIn),getBackThenFront:e=>staticResponse(defaultInfoText(e),_Outputs.backThenFront),getFrontThenBack:e=>staticResponse(defaultInfoText(e),_Outputs.frontThenBack),getSidesThenFrontBack:e=>staticResponse(defaultInfoText(e),_Outputs.sidesThenFrontBack),getFrontBackThenSides:e=>staticResponse(defaultInfoText(e),_Outputs.frontBackThenSides),goFront:e=>staticResponse(defaultAlertText(e),_Outputs.goFront),goMiddle:e=>staticResponse(defaultAlertText(e),_Outputs.goIntoMiddle),goRight:e=>staticResponse(defaultAlertText(e),_Outputs.right),goLeft:e=>staticResponse(defaultAlertText(e),_Outputs.left),goWest:e=>staticResponse(defaultAlertText(e),_Outputs.getLeftAndWest),goEast:e=>staticResponse(defaultAlertText(e),_Outputs.getRightAndEast),goLeftThenRight:e=>staticResponse(defaultAlertText(e),_Outputs.leftThenRight),goRightThenLeft:e=>staticResponse(defaultAlertText(e),_Outputs.rightThenLeft),goFrontBack:e=>staticResponse(defaultAlertText(e),_Outputs.goFrontBack),goSides:e=>staticResponse(defaultAlertText(e),_Outputs.sides),killAdds:e=>staticResponse(defaultInfoText(e),_Outputs.killAdds),killExtraAdd:e=>staticResponse(defaultInfoText(e),_Outputs.killExtraAdd),awayFromFront:e=>staticResponse(defaultAlertText(e),_Outputs.awayFromFront),sleep:e=>(t,a,n)=>(n.responseOutputStrings={sleep:_Outputs.sleepTarget},{[defaultAlertText(e)]:(e,t,a)=>{const n=getSource(t);return a.sleep?.({name:n})}}),stunOrInterruptIfPossible:e=>(t,a,n)=>(n.responseOutputStrings={stun:_Outputs.stunTarget,interrupt:_Outputs.interruptTarget},{[defaultAlertText(e)]:(e,t,a)=>{const n=getSource(t);return e.CanSilence()?a.interrupt?.({name:n}):e.CanStun()?a.stun?.({name:n}):void 0}}),stun:e=>(t,a,n)=>(n.responseOutputStrings={stun:_Outputs.stunTarget},{[defaultAlertText(e)]:(e,t,a)=>{const n=getSource(t);return a.stun?.({name:n})}}),stunIfPossible:e=>(t,a,n)=>(n.responseOutputStrings={stun:_Outputs.stunTarget},{[defaultAlertText(e)]:(e,t,a)=>{const n=getSource(t);if(e.CanStun())return a.stun?.({name:n})}}),interrupt:e=>(t,a,n)=>(n.responseOutputStrings={interrupt:_Outputs.interruptTarget},{[defaultAlertText(e)]:(e,t,a)=>{const n=getSource(t);return a.interrupt?.({name:n})}}),interruptIfPossible:e=>(t,a,n)=>(n.responseOutputStrings={interrupt:_Outputs.interruptTarget},{[defaultAlertText(e)]:(e,t,a)=>{const n=getSource(t);if(e.CanSilence())return a.interrupt?.({name:n})}}),preyOn:(e,t)=>{const a={preyOnYou:_Outputs.preyOnYou,preyOnTarget:_Outputs.preyOnPlayer},n=combineFuncs(defaultAlertText(e),(e,t,a)=>{const n=getTarget(t);if(e.me===n)return a.preyOnYou?.()},defaultInfoText(t),(e,t,a)=>{const n=getTarget(t),r=void 0===n?a.unknown?.():e.party.member(n);if(n!==e.me)return a.preyOnTarget?.({player:r})});return(e,t,r)=>(r.responseOutputStrings=a,n)},awayFrom:e=>(t,a,n)=>(n.responseOutputStrings={awayFromGroup:_Outputs.awayFromGroup,awayFromTarget:_Outputs.awayFromPlayer,unknown:_Outputs.unknown},{[defaultAlertText(e)]:(e,t,a)=>{const n=getTarget(t);if(e.me===n)return a.awayFromGroup?.();const r=void 0===n?a.unknown?.():e.party.member(n);return a.awayFromTarget?.({player:r})}}),meteorOnYou:e=>staticResponse(defaultAlarmText(e),_Outputs.meteorOnYou),stopMoving:e=>staticResponse(defaultAlarmText(e),_Outputs.stopMoving),stopEverything:e=>staticResponse(defaultAlarmText(e),_Outputs.stopEverything),moveAway:e=>staticResponse(defaultInfoText(e),_Outputs.moveAway),moveAround:e=>staticResponse(defaultInfoText(e),_Outputs.moveAround),breakChains:e=>staticResponse(defaultInfoText(e),_Outputs.breakChains),moveChainsTogether:e=>staticResponse(defaultInfoText(e),_Outputs.moveChainsTogether),earthshaker:e=>(t,a,n)=>(n.responseOutputStrings={earthshaker:_Outputs.earthshakerOnYou},{[defaultAlertText(e)]:(e,t,a)=>{if(getTarget(t)===e.me)return a.earthshaker?.()}}),wakeUp:e=>staticResponse(defaultAlarmText(e),_Outputs.wakeUp),getTowers:e=>staticResponse(defaultInfoText(e),_Outputs.getTowers)},responseMapTypeAssertion=Responses$1,nameToJobEnum={NONE:0,GLA:1,PGL:2,MRD:3,LNC:4,ARC:5,CNJ:6,THM:7,CRP:8,BSM:9,ARM:10,GSM:11,LTW:12,WVR:13,ALC:14,CUL:15,MIN:16,BTN:17,FSH:18,PLD:19,MNK:20,WAR:21,DRG:22,BRD:23,WHM:24,BLM:25,ACN:26,SMN:27,SCH:28,ROG:29,NIN:30,MCH:31,DRK:32,AST:33,SAM:34,RDM:35,BLU:36,GNB:37,DNC:38,RPR:39,SGE:40,VPR:41,PCT:42},allJobs=Object.keys(nameToJobEnum),allRoles=["tank","healer","dps","crafter","gatherer","none"],tankJobs=["GLA","PLD","MRD","WAR","DRK","GNB"],healerJobs=["CNJ","WHM","SCH","AST","SGE"],meleeDpsJobs=["PGL","MNK","LNC","DRG","ROG","NIN","SAM","RPR","VPR"],rangedDpsJobs=["ARC","BRD","DNC","MCH"],casterDpsJobs=["BLU","RDM","BLM","SMN","ACN","THM","PCT"],dpsJobs=[...meleeDpsJobs,...rangedDpsJobs,...casterDpsJobs],craftingJobs=["CRP","BSM","ARM","GSM","LTW","WVR","ALC","CUL"],gatheringJobs=["MIN","BTN","FSH"],stunJobs=["BLU",...tankJobs,...meleeDpsJobs],silenceJobs=["BLU",...tankJobs,...rangedDpsJobs],sleepJobs=[...casterDpsJobs,...healerJobs],feintJobs=[...meleeDpsJobs],addleJobs=[...casterDpsJobs],cleanseJobs=["BLU","BRD",...healerJobs],jobToRoleMap=(()=>{const e=(e,t,a)=>{t.forEach(t=>e.set(t,a))},t=new Map([["NONE","none"]]);return e(t,tankJobs,"tank"),e(t,healerJobs,"healer"),e(t,dpsJobs,"dps"),e(t,craftingJobs,"crafter"),e(t,gatheringJobs,"gatherer"),t})(),watchCombatantMap=[],shouldCancelWatch=(e,t)=>!!t.cancel||void 0!==e.maxDuration&&Date.now()-t.start>e.maxDuration,defaultWatchCombatant=(e,t)=>new Promise((a,n)=>{const r=e.delay??1e3,o={call:"getCombatants"};e.ids&&(o.ids=e.ids),e.names&&(o.names=e.names),e.props&&(o.props=e.props);const s={cancel:!1,start:Date.now()};watchCombatantMap.push(s);const i=()=>{shouldCancelWatch(e,s)?n(new Error("cancelled")):callOverlayHandler(o).then(e=>{s.cancel?n(new Error("was cancelled")):t(e)?a():window.setTimeout(i,r)})};window.setTimeout(i,r)});let watchCombatantOverride,clearCombatantsOverride;const defaultClearCombatants=()=>{for(;watchCombatantMap.length>0;){const e=watchCombatantMap.pop();e&&(e.cancel=!0)}},watchCombatant=(e,t)=>watchCombatantOverride?watchCombatantOverride(e,t):defaultWatchCombatant(e,t),output8Dir=["dirN","dirNE","dirE","dirSE","dirS","dirSW","dirW","dirNW"],output16Dir=["dirN","dirNNE","dirNE","dirENE","dirE","dirESE","dirSE","dirSSE","dirS","dirSSW","dirSW","dirWSW","dirW","dirWNW","dirNW","dirNNW"],outputCardinalDir=["dirN","dirE","dirS","dirW"],outputIntercardDir=["dirNE","dirSE","dirSW","dirNW"],outputStrings16Dir={dirN:_Outputs.dirN,dirNNE:_Outputs.dirNNE,dirNE:_Outputs.dirNE,dirENE:_Outputs.dirENE,dirE:_Outputs.dirE,dirESE:_Outputs.dirESE,dirSE:_Outputs.dirSE,dirSSE:_Outputs.dirSSE,dirS:_Outputs.dirS,dirSSW:_Outputs.dirSSW,dirSW:_Outputs.dirSW,dirWSW:_Outputs.dirWSW,dirW:_Outputs.dirW,dirWNW:_Outputs.dirWNW,dirNW:_Outputs.dirNW,dirNNW:_Outputs.dirNNW,unknown:_Outputs.unknown},outputStrings8Dir={dirN:_Outputs.dirN,dirNE:_Outputs.dirNE,dirE:_Outputs.dirE,dirSE:_Outputs.dirSE,dirS:_Outputs.dirS,dirSW:_Outputs.dirSW,dirW:_Outputs.dirW,dirNW:_Outputs.dirNW,unknown:_Outputs.unknown},outputStringsCardinalDir={dirN:_Outputs.dirN,dirE:_Outputs.dirE,dirS:_Outputs.dirS,dirW:_Outputs.dirW,unknown:_Outputs.unknown},outputStringsIntercardDir={dirNE:_Outputs.dirNE,dirSE:_Outputs.dirSE,dirSW:_Outputs.dirSW,dirNW:_Outputs.dirNW,unknown:_Outputs.unknown},xyTo16DirNum=(e,t,a,n)=>(e-=a,t-=n,Math.round(8-8*Math.atan2(e,t)/Math.PI)%16),xyTo8DirNum=(e,t,a,n)=>(e-=a,t-=n,Math.round(4-4*Math.atan2(e,t)/Math.PI)%8),xyTo4DirNum=(e,t,a,n)=>(e-=a,t-=n,Math.round(2-2*Math.atan2(e,t)/Math.PI)%4),xyTo4DirIntercardNum=(e,t,a,n)=>(e-=a,t-=n,Math.round(2-2*(Math.PI/4+Math.atan2(e,t))/Math.PI)%4),hdgTo16DirNum=e=>(Math.round(8-8*e/Math.PI)%16+16)%16,hdgTo8DirNum=e=>(Math.round(4-4*e/Math.PI)%8+8)%8,hdgTo4DirNum=e=>(Math.round(2-2*e/Math.PI)%4+4)%4,outputFrom8DirNum=e=>output8Dir[e]??"unknown",outputFromCardinalNum=e=>outputCardinalDir[e]??"unknown",outputFromIntercardNum=e=>outputIntercardDir[e]??"unknown",Directions$1={output8Dir:output8Dir,output16Dir:output16Dir,outputCardinalDir:outputCardinalDir,outputIntercardDir:outputIntercardDir,outputStrings16Dir:outputStrings16Dir,outputStrings8Dir:outputStrings8Dir,outputStringsCardinalDir:outputStringsCardinalDir,outputStringsIntercardDir:outputStringsIntercardDir,xyTo16DirNum:xyTo16DirNum,xyTo8DirNum:xyTo8DirNum,xyTo4DirNum:xyTo4DirNum,hdgTo16DirNum:hdgTo16DirNum,hdgTo8DirNum:hdgTo8DirNum,hdgTo4DirNum:hdgTo4DirNum,outputFrom8DirNum:outputFrom8DirNum,outputFromCardinalNum:outputFromCardinalNum,combatantStatePosTo8Dir:(e,t,a)=>xyTo8DirNum(e.PosX,e.PosY,t,a),combatantStatePosTo8DirOutput:(e,t,a)=>{const n=xyTo8DirNum(e.PosX,e.PosY,t,a);return outputFrom8DirNum(n)},combatantStateHdgTo8Dir:e=>hdgTo8DirNum(e.Heading),combatantStateHdgTo8DirOutput:e=>{const t=hdgTo8DirNum(e.Heading);return outputFrom8DirNum(t)},addedCombatantPosTo8Dir:(e,t,a)=>{const n=parseFloat(e.x),r=parseFloat(e.y);return xyTo8DirNum(n,r,t,a)},addedCombatantPosTo8DirOutput:(e,t,a)=>{const n=parseFloat(e.x),r=parseFloat(e.y),o=xyTo8DirNum(n,r,t,a);return outputFrom8DirNum(o)},addedCombatantHdgTo8Dir:e=>{const t=parseFloat(e.heading);return hdgTo8DirNum(t)},addedCombatantHdgTo8DirOutput:e=>{const t=parseFloat(e.heading),a=hdgTo8DirNum(t);return outputFrom8DirNum(a)},xyTo8DirOutput:(e,t,a,n)=>{const r=xyTo8DirNum(e,t,a,n);return outputFrom8DirNum(r)},xyToCardinalDirOutput:(e,t,a,n)=>{const r=xyTo4DirNum(e,t,a,n);return outputFromCardinalNum(r)},xyToIntercardDirOutput:(e,t,a,n)=>{const r=xyTo4DirIntercardNum(e,t,a,n);return outputFromIntercardNum(r)}},Util$1={jobEnumToJob:e=>allJobs.find(t=>nameToJobEnum[t]===e)??"NONE",jobToJobEnum:e=>nameToJobEnum[e],jobToRole:e=>jobToRoleMap.get(e)??"none",getAllRoles:()=>allRoles,isTankJob:e=>tankJobs.includes(e),isHealerJob:e=>healerJobs.includes(e),isMeleeDpsJob:e=>meleeDpsJobs.includes(e),isRangedDpsJob:e=>rangedDpsJobs.includes(e),isCasterDpsJob:e=>casterDpsJobs.includes(e),isDpsJob:e=>dpsJobs.includes(e),isCraftingJob:e=>craftingJobs.includes(e),isGatheringJob:e=>gatheringJobs.includes(e),isCombatJob:e=>!craftingJobs.includes(e)&&!gatheringJobs.includes(e),canStun:e=>stunJobs.includes(e),canSilence:e=>silenceJobs.includes(e),canSleep:e=>sleepJobs.includes(e),canCleanse:e=>cleanseJobs.includes(e),canFeint:e=>feintJobs.includes(e),canAddle:e=>addleJobs.includes(e),watchCombatant:watchCombatant,clearWatchCombatants:()=>{void 0!==clearCombatantsOverride?clearCombatantsOverride():defaultClearCombatants()},setWatchCombatantOverride:(e,t)=>{watchCombatantOverride=e,clearCombatantsOverride=t},gameLogCodes:gameLogCodes,actorControlType:actorControlType,shortName:(e,t)=>{if("string"!=typeof e)return"???";const a=t[e];if(void 0!==a)return a;const n=e.indexOf(" ");return n<0?e:e.slice(0,n)}},Conditions=_Conditions,ContentType=data,NetRegexes=NetRegexes$1,Regexes=Regexes$1,Responses=Responses$1,Outputs=_Outputs,Util=Util$1,Directions=Directions$1,ZoneId=data$1,ZoneInfo=data$2;class UserConfig{optionTemplates={};userFileCallbacks={};savedConfig={};getDefaultBaseOptions(){return{ParserLanguage:"en",ShortLocale:"en",DisplayLanguage:"en",TextAlertsEnabled:!0,SoundAlertsEnabled:!0,SpokenAlertsEnabled:!1,GroupSpokenAlertsEnabled:!1,SystemInfo:{cactbotVersion:"0.0.0.0",overlayPluginVersion:"0.0.0.0",ffxivPluginVersion:"0.0.0.0",actVersion:"0.0.0.0",gameRegion:"International"},Debug:!1}}evalUserFile(content,options){const Options=options;eval(content)}registerOptions(e,t,a){this.optionTemplates[e]=t,a&&(this.userFileCallbacks[e]=a)}sortUserFiles(e){const t={};for(const a of e)t[a]=a.toUpperCase().split(/[/\\]/);return e.sort((e,a)=>{const n=t[e],r=t[a];if(void 0===n||void 0===r)throw new UnreachableCode;const o=Math.max(n.length,r.length);for(let t=0;t<o;++t){const e=n[t],a=r[t];if(void 0===e||void 0===a)throw new UnreachableCode;const o=n.length-1===t,s=r.length-1===t;if(o&&s){const t=e.replace(/\.[^\.]*$/,""),n=a.replace(/\.[^\.]*$/,""),r=t.localeCompare(n);return r||e.localeCompare(a)}if(!o&&!s){const t=e.localeCompare(a);if(t)return t}if(n.length-1<=t)return 1;if(r.length-1<=t)return-1}return 0})}filterUserFiles(e,t,a){const n=a.toLowerCase(),r=t.toLowerCase();return e.filter(e=>{const t=e.toLowerCase();return!!t.endsWith(n)&&(t===`${r}${n}`||!(!t.startsWith(`${r}/`)&&!t.startsWith(`${r}\\`)))})}getUserConfigLocation(e,t,a){let n=!1;const r=()=>{n||(n=!0,window.location.reload())};addOverlayListener("onUserFileChanged",()=>{r()}),addOverlayListener("onForceReload",()=>{r()}),this.loadUserFiles(e,t,a)}loadUserFiles(e,t,a,n=!0){const r=callOverlayHandler({call:"cactbotLoadData",overlay:"options"}),o=async o=>{const s=`${o.detail.userLocation.replace(/[/\\]*$/,"")}\\`,i=o.detail.localUserFiles;if(t.SystemInfo={cactbotVersion:o.detail.cactbotVersion,overlayPluginVersion:o.detail.overlayPluginVersion,ffxivPluginVersion:o.detail.ffxivPluginVersion,actVersion:o.detail.actVersion,gameRegion:o.detail.gameRegion},o.detail.language&&(t.ParserLanguage=o.detail.language,t.ShortLocale=o.detail.language,t.DisplayLanguage=o.detail.language),o.detail.parserLanguage&&(t.ParserLanguage=o.detail.parserLanguage,t.Language=o.detail.parserLanguage),o.detail.systemLocale){t.SystemLocale=o.detail.systemLocale;let e=o.detail.systemLocale.slice(0,2);"zh"===e&&(e="cn"),isLang(e)?t.ShortLocale=e:t.ShortLocale=t.ParserLanguage}const u=o.detail.displayLanguage;isLang(u)?t.DisplayLanguage=u:t.DisplayLanguage=t.ParserLanguage||"en",document.documentElement.classList.add(`lang-${t.DisplayLanguage}`),document.documentElement.lang=langToLocale(t.DisplayLanguage),this.addUnlockText(t.DisplayLanguage),this.savedConfig=(await r)?.data??{};const l=this.optionTemplates[e];if(void 0!==l){const a=this.savedConfig[e]??{};this.processOptions(t,t,a,l.options),l.processExtraOptions&&l.processExtraOptions(t,a)}const d=void 0!==t.Debug&&!1!==t.Debug?e=>{}:()=>{},c={raidboss:["Triggers"]};c[e]=c[e]||[];const p={};if(i){const a=this.sortUserFiles(Object.keys(i)),r=this.filterUserFiles(a,e,".js"),o=n?this.filterUserFiles(a,e,".css"):[];for(const n of r)try{d(`local user file: ${s}${n}`),this.evalUserFile(i[n]??"",t);for(const a of c[e]??[]){const e=p[a];null!=e&&t[a],p[a]=t[a]}this.userFileCallbacks[e]?.(n,i,t,s)}catch(g){}void 0!==t.Skin&&this.handleSkin(t.Skin);for(const e of o){d(`local user file: ${s}${e}`);const t=document.createElement("style"),a=i[e];void 0!==a&&(t.innerText=a);const n=document.getElementsByTagName("head")[0];n&&n.appendChild(t)}}a(),callOverlayHandler({call:"cactbotRequestState"})};callOverlayHandler({call:"cactbotLoadUser",source:location.href,overlayName:e}).then(e=>{"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{o(e)}):o(e)})}handleSkin(e){if(!e||"default"===e)return;const t=`../raidboss/skins/${e}/${e}.css`;this.appendCSSLink(t)}appendJSLink(e){const t=document.createElement("script");t.setAttribute("type","text/javascript"),t.setAttribute("src",e),t.setAttribute("async","false");const a=document.getElementsByTagName("head")[0];a&&a.appendChild(t)}appendCSSLink(e){const t=document.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href",e);const a=document.getElementsByTagName("head")[0];a&&a.appendChild(t)}processOptions(e,t,a,n){if(void 0!==n)for(const r of n){let n;n="function"==typeof r.default?r.default(e):r.default;let o=!0;if("object"==typeof a&&!Array.isArray(a)&&r.id in a){const e=a[r.id];void 0!==e&&""!==e&&(n=e,o=!1)}if(r.setterFunc){const a=r.setterFunc(n,e,o);void 0!==a&&(t[r.id]=a)}else"integer"===r.type?"number"==typeof n?t[r.id]=Math.floor(n):"string"==typeof n&&(t[r.id]=parseInt(n)):"float"===r.type?"number"==typeof n?t[r.id]=n:"string"==typeof n&&(t[r.id]=parseFloat(n)):t[r.id]=n}}addUnlockText(e){const t={en:"🔓 Unlocked (lock overlay before using)",de:"🔓 Entsperrt (Sperre das Overlay vor der Nutzung)",fr:"🔓 Débloqué (Bloquez l'overlay avant utilisation)",ja:"🔓 ロック解除 (オーバーレイを使用する前にロックしてください)",cn:"🔓 已解除锁定 (你需要将此悬浮窗锁定后方可使用)",ko:"🔓 위치 잠금 해제됨 (사용하기 전에 위치 잠금을 설정하세요)"},a="cactbot-unlocked-text";let n=document.getElementById(a);n||(n=document.createElement("div"),n.id=a,n.classList.add("text"),n.style.display="none",document.body.append(n)),n.innerHTML=t[e]||t.en}}const UserConfig$1=new UserConfig;"undefined"!=typeof document&&document.addEventListener("onOverlayStateUpdate",e=>{const t=document.documentElement.classList;e.detail.isLocked?t.remove("resize-handle","unlocked"):t.add("resize-handle","unlocked")});const _hoisted_1={id:"app"},_hoisted_2={key:0,class:"container"},_hoisted_3={class:"header"},_hoisted_4={style:{"text-align":"right"},flex:"~ gap-2"},_hoisted_5={class:"section"},_hoisted_6={class:"info-table"},_hoisted_7={class:"info-key"},_hoisted_8={class:"section"},_hoisted_9={class:"card-title"},_hoisted_10={class:"event-content"},_hoisted_11={class:"section"},_hoisted_12={class:"card-title"},_hoisted_13={class:"event-content"},_hoisted_14={class:"section"},_hoisted_15={class:"card-title"},_hoisted_16={class:"event-content"},_hoisted_17={key:1},_sfc_main=defineComponent({__name:"test",setup(e){const{wsConnected:t}=useWebSocket({addWsParam:!0,allowClose:!1}),a=UserConfig$1.getDefaultBaseOptions(),n=ref({ParserLanguage:"",ShortLocale:"",DisplayLanguage:"",TextAlertsEnabled:!1,SoundAlertsEnabled:!1,SpokenAlertsEnabled:!1,GroupSpokenAlertsEnabled:!1,SystemInfo:{cactbotVersion:"",overlayPluginVersion:"",ffxivPluginVersion:"",actVersion:"",gameRegion:""},Debug:!1,Language:"",SystemLocale:"",CactbotUserDirectory:"",DefaultAlertOutput:""}),r=ref(""),o=()=>r.value=(new Date).toLocaleString();o(),setInterval(o,1e3);const s=ref({ChangePrimaryPlayer:{title:"当前角色",instruction:"切换角色以触发事件"},ChangeZone:{title:"当前区域",instruction:"移动一次区域以触发事件"},CombatData:{title:"战斗信息",instruction:"进入战斗以触发事件"},EnmityTargetData:{title:"目标信息",instruction:"选中一个目标以触发事件"},PartyChanged:{title:"队伍列表",instruction:"切换职业/组成小队以触发事件"},onGameExistsEvent:{title:"游戏存在",instruction:"打开游戏以触发事件"},onGameActiveChangedEvent:{title:"游戏活动状态",instruction:"操作游戏以触发事件"},onInCombatChangedEvent:{title:"战斗状态",instruction:"进入战斗以触发事件"},onZoneChangedEvent:{title:"区域变化",instruction:"移动一次区域以触发事件"},onPlayerDied:{title:"玩家死亡",instruction:"死一次以触发事件"},onPlayerChangedEvent:{title:"玩家变化",instruction:"移动角色以触发事件"}});UserConfig$1.getUserConfigLocation("soumatest",a,()=>{n.value.ParserLanguage=a.ParserLanguage,n.value.DisplayLanguage=a.DisplayLanguage,n.value.SystemInfo=a.SystemInfo,n.value.CactbotUserDirectory=UserConfig$1.savedConfig.general.CactbotUserDirectory,n.value.DefaultAlertOutput=UserConfig$1.savedConfig.raidboss.DefaultAlertOutput});const i=ref({});function u(e){if("EnmityTargetData"===e.type&&!e.Target)return;const{type:t,...a}={...e};i.value[e.type]=a}const l=ref({changeZone:{title:"Line 01 (0x01): ChangeZone",instruction:"切换地图",regex:NetRegexes$1.changeZone()},addedCombatant:{title:"Line 03 (0x03): AddCombatant",instruction:"切换地图",regex:NetRegexes$1.addedCombatant()},removingCombatant:{title:"Line 04 (0x04): RemoveCombatant",instruction:"切换地图",regex:NetRegexes$1.removingCombatant()},startsUsing:{title:"Line 20 (0x14): NetworkStartsCasting",instruction:"读条技能",regex:NetRegexes$1.startsUsing()},ability:{title:"Line 21 (0x15): NetworkAbility",instruction:"使用技能",regex:NetRegexes$1.ability()},networkDoT:{title:"Line 24 (0x18): NetworkDoT",instruction:"获得 DoT/Hot 效果",regex:NetRegexes$1.networkDoT()},wasDefeated:{title:"Line 25 (0x19): NetworkDeath",instruction:"被击倒",regex:NetRegexes$1.wasDefeated()},gainsEffect:{title:"Line 26 (0x1A): NetworkBuff",instruction:"获得buff",regex:NetRegexes$1.gainsEffect()},headMarker:{title:"Line 27 (0x1B): NetworkTargetIcon",instruction:"获得头顶点名（分摊/分散/死刑/麻将）",regex:NetRegexes$1.headMarker()},losesEffect:{title:"Line 30 (0x1E): NetworkBuffRemove",instruction:"失去buff",regex:NetRegexes$1.losesEffect()},network6d:{title:"Line 33 (0x21): Network6D",instruction:"打本触发（本越新越好）",regex:NetRegexes$1.network6d()},tether:{title:"Line 35 (0x23): NetworkTether",instruction:"获得连线效果",regex:NetRegexes$1.tether()},map:{title:"Line 40 (0x28): Map",instruction:"切换地图",regex:NetRegexes$1.map()},systemLogMessage:{title:"Line 41 (0x29): SystemLogMessage",instruction:"系统日志信息",regex:NetRegexes$1.systemLogMessage()}}),d=ref({mapEffect:{title:"Line 257 (0x101): MapEffect",instruction:"打本触发（本越新越好）",regex:NetRegexes$1.mapEffect()},inCombat:{title:"Line 260 (0x104): InCombat",instruction:"进入战斗",regex:NetRegexes$1.inCombat()},combatantMemory:{title:"Line 261 (0x105): CombatantMemory",instruction:"打本触发（本越新越好）",regex:NetRegexes$1.combatantMemory()},startsUsingExtra:{title:"Line 263 (0x107): StartsUsingExtra",instruction:"读条技能",regex:NetRegexes$1.startsUsingExtra()},abilityExtra:{title:"Line 264 (0x108): AbilityExtra",instruction:"使用技能",regex:NetRegexes$1.abilityExtra()},countdown:{title:"Line 268 (0x10C): Countdown",instruction:"开启倒计时",regex:NetRegexes$1.countdown()},actorMove:{title:"Line 270 (0x10E): ActorMove",instruction:"打本触发（本越新越好）",regex:NetRegexes$1.actorMove()},actorSetPos:{title:"Line 271 (0x10F): ActorSetPos",instruction:"打本触发（本越新越好）",regex:NetRegexes$1.actorSetPos()},actorControlExtra:{title:"Line 273 (0x111): ActorControlExtra",instruction:"打本触发（本越新越好）",regex:NetRegexes$1.actorControlExtra()}});return addOverlayListener("ChangePrimaryPlayer",u),addOverlayListener("ChangeZone",u),addOverlayListener("CombatData",u),addOverlayListener("EnmityTargetData",u),addOverlayListener("PartyChanged",u),addOverlayListener("onGameExistsEvent",u),addOverlayListener("onGameActiveChangedEvent",u),addOverlayListener("onInCombatChangedEvent",u),addOverlayListener("onZoneChangedEvent",u),addOverlayListener("onPlayerDied",u),addOverlayListener("onPlayerChangedEvent",u),addOverlayListener("LogLine",e=>{for(const t in l.value){l.value[t].regex.test(e.rawLine)&&(i.value[t]=!0)}for(const t in d.value){d.value[t].regex.test(e.rawLine)&&(i.value[t]=!0)}}),(e,a)=>{const o=ElButton,u=__unplugin_components_0,c=ElCard,p=ElCol,g=ElRow,f=ElTag;return openBlock(),createElementBlock("div",_hoisted_1,[unref(t)?(openBlock(),createElementBlock("div",_hoisted_2,[createBaseVNode("div",_hoisted_3,[a[3]||(a[3]=createBaseVNode("div",null,[createBaseVNode("h1",{style:{color:"#409eff",margin:"0"}}," 自助测试页 ")],-1)),createBaseVNode("div",_hoisted_4,[a[2]||(a[2]=createBaseVNode("i",{class:"el-icon-time"},null,-1)),createTextVNode(" 系统时间: "+toDisplayString(unref(r)||"无数据")+" ",1),createVNode(o,{type:"primary",size:"small",onClick:a[0]||(a[0]=e=>{return t=`测试TTS${(new Date).getTime().toString().slice(-4)}`,void callOverlayHandler({call:"cactbotSay",text:t});var t})},{default:withCtx(()=>a[1]||(a[1]=[createTextVNode(" 测试TTS ")])),_:1,__:[1]}),createVNode(u)])]),createBaseVNode("div",_hoisted_5,[a[4]||(a[4]=createBaseVNode("div",{class:"section-title"},[createBaseVNode("i",{class:"el-icon-setting"}),createTextVNode(" 用户配置信息 ")],-1)),createVNode(g,{gutter:12},{default:withCtx(()=>[createVNode(p,{span:24},{default:withCtx(()=>[createVNode(c,{shadow:"hover"},{default:withCtx(()=>[createBaseVNode("div",_hoisted_6,[(openBlock(!0),createElementBlock(Fragment,null,renderList({"ACT版本":unref(n).SystemInfo.actVersion,"解析插件版本":unref(n).SystemInfo.ffxivPluginVersion,"OverlayPlugin版本":unref(n).SystemInfo.overlayPluginVersion,"Cactbot版本":unref(n).SystemInfo.cactbotVersion,"解析语言":unref(n).ParserLanguage,"Cactbot 显示语言":unref(n).DisplayLanguage,"游戏区域":unref(n).SystemInfo.gameRegion,"Raidboss 默认输出":unref(n).DefaultAlertOutput,"用户文件夹":unref(n).CactbotUserDirectory},(e,t)=>(openBlock(),createElementBlock("div",{key:t,class:"info-row"},[createBaseVNode("div",_hoisted_7,toDisplayString(t),1),createBaseVNode("div",{class:normalizeClass(["info-val",{"no-data":!e}])},toDisplayString(e||"无数据"),3)]))),128))])]),_:1})]),_:1})]),_:1})]),createBaseVNode("div",_hoisted_8,[a[5]||(a[5]=createBaseVNode("div",{class:"section-title"},[createBaseVNode("i",{class:"el-icon-document"}),createTextVNode(" ACT 网络日志测试（常用部分） ")],-1)),a[6]||(a[6]=createBaseVNode("div",{class:"header-tip"}," 如果无法触发这部分事件，说明你需要更新解析插件。 ",-1)),createVNode(g,{gutter:12},{default:withCtx(()=>[(openBlock(!0),createElementBlock(Fragment,null,renderList(unref(l),(e,t)=>(openBlock(),createBlock(p,{key:t,xs:24,sm:12,md:8,lg:6},{default:withCtx(()=>[createVNode(c,{class:normalizeClass(["event-card",unref(i)[t]?"success":"danger"])},{default:withCtx(()=>[createBaseVNode("div",_hoisted_9,[createTextVNode(toDisplayString(unref(l)[t].title)+" ",1),createVNode(f,{type:unref(i)[t]?"success":"danger",size:"small"},{default:withCtx(()=>[createTextVNode(toDisplayString(unref(i)[t]?"成功":"未触发"),1)]),_:2},1032,["type"])]),createBaseVNode("div",_hoisted_10,toDisplayString(unref(i)[t]?"":"请尝试：")+toDisplayString(e.instruction),1)]),_:2},1032,["class"])]),_:2},1024))),128))]),_:1})]),createBaseVNode("div",_hoisted_11,[a[7]||(a[7]=createBaseVNode("div",{class:"section-title"},[createBaseVNode("i",{class:"el-icon-s-data"}),createTextVNode(" OverlayPlugin 事件测试（常用部分） ")],-1)),a[8]||(a[8]=createBaseVNode("div",{class:"header-tip"}," 如果无法触发这部分事件，说明你需要更新 OverlayPlugin 插件。 ",-1)),createVNode(g,{gutter:12},{default:withCtx(()=>[(openBlock(!0),createElementBlock(Fragment,null,renderList(unref(s),(e,t)=>(openBlock(),createBlock(p,{key:t,xs:24,sm:12,md:8,lg:6},{default:withCtx(()=>[createVNode(c,{class:normalizeClass(["event-card",unref(i)[t]?"success":"danger"])},{default:withCtx(()=>[createBaseVNode("div",_hoisted_12,[createTextVNode(toDisplayString(e.title)+"（"+toDisplayString(t)+"） ",1),createVNode(f,{type:unref(i)[t]?"success":"danger",size:"small"},{default:withCtx(()=>[createTextVNode(toDisplayString(unref(i)[t]?"成功":"未触发"),1)]),_:2},1032,["type"])]),createBaseVNode("div",_hoisted_13,toDisplayString(unref(i)[t]?"":"请尝试：")+toDisplayString(e.instruction),1)]),_:2},1032,["class"])]),_:2},1024))),128))]),_:1})]),createBaseVNode("div",_hoisted_14,[a[9]||(a[9]=createBaseVNode("div",{class:"section-title"},[createBaseVNode("i",{class:"el-icon-cpu"}),createTextVNode(" OverlayPlugin 日志测试（常用部分） ")],-1)),a[10]||(a[10]=createBaseVNode("div",{class:"header-tip"}," 如果无法触发这部分事件，说明你需要更新 OverlayPlugin 插件。 ",-1)),createVNode(g,{gutter:12},{default:withCtx(()=>[(openBlock(!0),createElementBlock(Fragment,null,renderList(unref(d),(e,t)=>(openBlock(),createBlock(p,{key:t,xs:24,sm:12,md:8,lg:6},{default:withCtx(()=>[createVNode(c,{class:normalizeClass(["event-card",unref(i)[t]?"success":"danger"])},{default:withCtx(()=>[createBaseVNode("div",_hoisted_15,[createTextVNode(toDisplayString(unref(d)[t].title)+" ",1),createVNode(f,{type:unref(i)[t]?"success":"danger",size:"small"},{default:withCtx(()=>[createTextVNode(toDisplayString(unref(i)[t]?"成功":"未触发"),1)]),_:2},1032,["type"])]),createBaseVNode("div",_hoisted_16,toDisplayString(unref(i)[t]?"":"请尝试：")+toDisplayString(e.instruction),1)]),_:2},1032,["class"])]),_:2},1024))),128))]),_:1})])])):(openBlock(),createElementBlock("div",_hoisted_17,a[11]||(a[11]=[createBaseVNode("p",null,"等待 WebSocket 连接...",-1)])))])}}}),test=_export_sfc(_sfc_main,[["__scopeId","data-v-738cfd8d"]]);export{test as default};
