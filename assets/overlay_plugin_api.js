let e=!1,r=null,n=null,s=[],t=0;const i={},o={},l=(e,r)=>{n?s?s.push(e):n.send(JSON.stringify(e)):s?s.push([e,r]):window.OverlayPluginApi.callHandler(JSON.stringify(e),r)},a=e=>{f();const r=o[e.type];r?.forEach(r=>{try{r(e)}catch(n){}})},c=a,d=(e,r)=>{f(),o[e]||(o[e]=[],s||l({call:"subscribe",events:[e]})),o[e]?.push(r)},u=(e,r)=>{if(f(),o[e]){const n=o[e],s=n?.indexOf(r);void 0!==s&&s>-1&&n?.splice(s,1)}},w=e=>{f();const r={...e,rseq:0};let s;return n?(r.rseq=t++,s=new Promise((e,n)=>{i[r.rseq]={resolve:e,reject:n}}),l(r)):s=new Promise((e,n)=>{l(r,r=>{if(null===r)return void e(r);const s=JSON.parse(r);s.$error?n(s):e(s)})}),s},v={},y=e=>{f();const r=e.call;return(v[r]??w)(e)},f=()=>{if(!e){if("undefined"!=typeof window){if(r=new URLSearchParams(window.location.search).get("OVERLAY_WS"),null!==r){const e=function(r){n=new WebSocket(r),n.addEventListener("error",e=>{}),n.addEventListener("open",()=>{const e=s??[];s=null,l({call:"subscribe",events:Object.keys(o)});for(const r of e)Array.isArray(r)||l(r)}),n.addEventListener("message",e=>{try{if("string"!=typeof e.data)return;const r=JSON.parse(e.data),n=void 0!==r?.rseq?i[r.rseq]:void 0;void 0!==r.rseq&&n?(r.$error?n.reject(r):n.resolve(r),delete i[r.rseq]):a(r)}catch(r){return}}),n.addEventListener("close",()=>{s=null,window.setTimeout(()=>{e(r)},300)})};e(r)}else{const e=function(){if(!window.OverlayPluginApi?.ready)return void window.setTimeout(e,300);const r=s??[];s=null,window.__OverlayCallback=a,l({call:"subscribe",events:Object.keys(o)});for(const e of r)Array.isArray(e)&&l(e[0],e[1])};e()}window.addOverlayListener=d,window.removeOverlayListener=u,window.callOverlayHandler=y,window.dispatchOverlayEvent=c}e=!0}};export{d as a,y as c,u as r};
