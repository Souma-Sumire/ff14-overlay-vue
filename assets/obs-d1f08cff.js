var W=Object.defineProperty;var U=(e,t,o)=>t in e?W(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o;var w=(e,t,o)=>(U(e,typeof t!="symbol"?t+"":t,o),o);import{d as defineComponent,s as useStorage,K as reactive,aC as json_default,p as ref,b as onMounted,aG as VXETable,r as resolveComponent,o as openBlock,e as createElementBlock,t as withDirectives,v as vShow,u as unref,x as createBaseVNode,R as normalizeStyle,a as createVNode,w as withCtx,a0 as isRef,y as createTextVNode,F as Fragment}from"./vendor-2a442634.js";import{C as ContentType$1}from"./content_type-ecdd0c19.js";import{d as data,z as zoneInfo}from"./zoneInfo-6eb69bef.js";import{g as gameLogCodes,a as actorControlType,U as UnreachableCode,N as NetRegexes$1,R as Regexes$1,c as commonNetRegex}from"./netregexes-3f94ba22.js";import{c as callOverlayHandler,a as addOverlayListener}from"./overlay_plugin_api-409cb9ea.js";import{Z as ZoneId$1}from"./zone_id-79ca3eef.js";const languages=["en","de","fr","ja","cn","ko"],isLang=e=>{const t=languages;return e===void 0?!1:t.includes(e)},langToLocale=e=>({en:"en",de:"de",fr:"fr",ja:"ja",cn:"zh-CN",ko:"ko"})[e],_Conditions={targetIsYou(){return(e,t)=>e.me===(t==null?void 0:t.target)},targetIsNotYou(){return(e,t)=>e.me!==(t==null?void 0:t.target)},caresAboutAOE(){return e=>e.role==="tank"||e.role==="healer"||e.CanAddle()||e.CanFeint()||e.job==="BLU"},caresAboutMagical(){return e=>e.role==="tank"||e.role==="healer"||e.CanAddle()||e.job==="BLU"},caresAboutPhysical(){return e=>e.role==="tank"||e.role==="healer"||e.CanFeint()||e.job==="BLU"}},numberToOutputString=function(e){const t=e.toString();return{en:t,de:t,fr:t,ja:t,cn:t,ko:t}},_Outputs={aoe:{en:"aoe",de:"AoE",fr:"AoE",ja:"全体攻撃",cn:"AoE",ko:"전체 공격"},bigAoe:{en:"big aoe!",de:"Große AoE!",fr:"Grosse AoE !",ja:"強力な全体攻撃",cn:"大AoE伤害！",ko:"강한 전체 공격!"},bleedAoe:{en:"AoE + Bleed",de:"AoE + Blutung",fr:"AoE + Saignement",ja:"全体攻撃 + DoT",cn:"AOE + 流血",ko:"전체 공격 + 도트"},tankBuster:{en:"Tank Buster",de:"Tank buster",fr:"Tank buster",ja:"タンク強攻撃",cn:"坦克死刑",ko:"탱버"},miniBuster:{en:"Mini Buster",de:"Kleiner Tankbuster",fr:"Mini Buster",ja:"タンク攻撃",cn:"小死刑",ko:"약한 탱버"},tankBusterOnPlayer:{en:"Tank Buster on ${player}",de:"Tank buster auf ${player}",fr:"Tank buster sur ${player}",ja:"${player}に強攻撃",cn:"死刑 点 ${player}",ko:'"${player}" 탱버'},tankBusterOnYou:{en:"Tank Buster on YOU",de:"Tank buster auf DIR",fr:"Tank buster sur VOUS",ja:"自分に強攻撃",cn:"死刑点名",ko:"탱버 대상자"},tankBusters:{en:"Tank Busters",de:"Tank busters",fr:"Tank busters",ja:"タンク強攻撃",cn:"坦克死刑",ko:"탱버"},tetherBusters:{en:"Tank Tethers",de:"Tank-Verbindungen",fr:"Liens Tank",ja:"タンク線取り",cn:"坦克截线",ko:"탱커가 선 가로채기"},avoidTetherBusters:{en:"Avoid Tank Tethers",de:"Vermeide Tank Verbindungen",fr:"Évitez les liens des Tanks",ja:"タンクの線を避けて",cn:"远离坦克连线",ko:"탱커 선 피하기"},tankCleave:{en:"Tank cleave",de:"Tank Cleave",fr:"Tank cleave",ja:"タンク範囲攻撃",cn:"范围死刑",ko:"광역 탱버"},tankBusterCleaves:{en:"Tank Buster Cleaves",de:"Tankbuster Cleaves",fr:"Tankbuster cleaves",ja:"MT・ST同時範囲攻撃",cn:"坦克范围死刑",ko:"동시 광역 탱버"},tankBusterCleavesOnYou:{en:"Tank Cleaves on YOU",de:"Tank Cleaves auf DIR",fr:"Tank cleaves sur VOUS",ja:"MT・ST同時範囲攻撃(自分対象)",cn:"坦克范围死刑点名",ko:"광역 탱버 대상자"},avoidTankCleave:{en:"Avoid tank cleave",de:"Tank Cleave ausweichen",fr:"Évitez le tank cleave",ja:"タンク範囲攻撃を避ける",cn:"远离范围死刑",ko:"광역 탱버 피하기"},avoidTankCleaves:{en:"Avoid Tank Cleaves",de:"Tankbuster Cleaves ausweichen",fr:"Évitez les cleaves (tankbusters)",ja:"範囲攻撃を避けて",cn:"远离坦克范围死刑",ko:"광역 탱버 피하기"},tankCleaveOnYou:{en:"Tank cleave on YOU",de:"Tank Cleave aud DIR",fr:"Tank cleave sur VOUS",ja:"自分に範囲攻撃",cn:"范围死刑点名",ko:"나에게 광역 탱버"},sharedTankbuster:{en:"Shared Tank Buster",de:"Geteilter Tankbuster",fr:"Partagez le Tank buster",ja:"タンク頭割り",cn:"分摊死刑",ko:"쉐어 탱버"},sharedTankbusterOnYou:{en:"Shared Tank Buster on YOU",de:"geteilter Tankbuster auf DIR",fr:"Tank buster à partager sur VOUS",ja:"自分にタンク頭割り",cn:"分摊死刑点名",ko:"쉐어 탱버 대상자"},sharedTankbusterOnPlayer:{en:"Shared Tank Buster on ${player}",de:"geteilter Tankbuster on ${player}",fr:"Tank buster à partager sur ${player}",ja:"${player} にタンク頭割り",cn:"分摊死刑点 ${player}",ko:'"${player}" 쉐어 탱버'},tankSwap:{en:"Tank Swap!",de:"Tankwechsel!",fr:"Tank swap !",ja:"タンクスイッチ!",cn:"换T！",ko:"탱 교대"},spread:{en:"Spread",de:"Verteilen",fr:"Dispersez-vous",ja:"散開",cn:"分散",ko:"산개"},defamationOnYou:{en:"Defamation on YOU",de:"Ehrenstrafe aud DIR",fr:"Diffamation sur VOUS",ja:"自分に巨大な爆発",cn:"大圈点名",ko:"광역징 대상자"},protean:{en:"Protean",de:"Himmelsrichtungen",fr:"Positions",ja:"基本散会",cn:"八方分散",ko:"8방향 산개"},stackMarker:{en:"Stack",de:"Sammeln",fr:"Packez-vous",ja:"頭割り",cn:"分摊",ko:"쉐어뎀"},getTogether:{en:"Stack",de:"Sammeln",fr:"Packez-vous",ja:"集合",cn:"集合",ko:"모이기"},healerGroups:{en:"Healer Groups",de:"Heiler-Gruppen",fr:"Groupes sur les heals",ja:"ヒラに頭割り",cn:"双奶分组分摊",ko:"힐러 그룹 쉐어"},stackOnYou:{en:"Stack on YOU",de:"Auf DIR sammeln",fr:"Package sur VOUS",ja:"自分に頭割り",cn:"分摊点名",ko:"쉐어징 대상자"},stackOnPlayer:{en:"Stack on ${player}",de:"Auf ${player} sammeln",fr:"Packez-vous sur ${player}",ja:"${player}に頭割り",cn:"靠近 ${player}分摊",ko:'"${player}" 쉐어징'},stackPartner:{en:"Stack With Partner",de:"Mit Partner stacken",fr:"Packez-vous avec votre partenaire",ja:"ペア",cn:"与搭档分摊",ko:"파트너와 쉐어"},stackMiddle:{en:"Stack in middle",de:"In der Mitte sammeln",fr:"Packez-vous au milieu",ja:"中央で頭割り",cn:"中间集合",ko:"중앙에서 쉐어"},baitPuddles:{en:"Bait puddles",de:"Flächen Ködern",fr:"Attirez les flaques",ja:"AOE誘導",cn:"诱导放圈",ko:"장판 유도"},stacks:{en:"Stacks",de:"Sammeln",fr:"Package",ja:"頭割り",cn:"分摊",ko:"쉐어"},doritoStack:{en:"Dorito Stack",de:"Mit Marker sammeln",fr:"Packez les marques",ja:"マーカー同士で頭割り",cn:"点名集合",ko:"징끼리 모이기"},spreadThenStack:{en:"Spread => Stack",de:"Verteilen => Sammeln",fr:"Dispersion => Package",ja:"散開 => 頭割り",cn:"分散 => 集合",ko:"산개 => 집합"},stackThenSpread:{en:"Stack => Spread",de:"Sammeln => Verteilen",fr:"Package => Dispersion",ja:"頭割り => 散開",cn:"集合 => 分散",ko:"집합 => 산개"},drawIn:{en:"Draw In",de:"Einzug",fr:"Attraction",ja:"吸込み",cn:"吸引",ko:"끌어당김"},knockback:{en:"Knockback",de:"Rückstoß",fr:"Poussée",ja:"ノックバック",cn:"击退",ko:"넉백"},knockbackOnYou:{en:"Knockback on YOU",de:"Rückstoß auf DIR",fr:"Poussée sur VOUS",ja:"自分にノックバック",cn:"击退点名",ko:"넉백징 대상자"},knockbackOnPlayer:{en:"Knockback on ${player}",de:"Rückstoß auf ${player}",fr:"Poussée sur ${player}",ja:"${player}にノックバック",cn:"击退点名${player}",ko:'"${player}" 넉백징'},lookTowardsBoss:{en:"Look Towards Boss",de:"Anschauen Boss",fr:"Regardez le boss",ja:"ボスを見る",cn:"面向Boss",ko:"쳐다보기"},lookAway:{en:"Look Away",de:"Wegschauen",fr:"Regardez ailleurs",ja:"ボスを見ない",cn:"背对Boss",ko:"뒤돌기"},lookAwayFromPlayer:{en:"Look Away from ${player}",de:"Schau weg von ${player}",fr:"Ne regardez pas ${player}",ja:"${player}を見ない",cn:"背对${player}",ko:"${player}에게서 뒤돌기"},lookAwayFromTarget:{en:"Look Away from ${name}",de:"Schau weg von ${name}",fr:"Ne regardez pas ${name}",ja:"${name}を見ない",cn:"背对${name}",ko:"${name}에게서 뒤돌기"},getBehind:{en:"Get Behind",de:"Hinter ihn",fr:"Passez derrière",ja:"背面へ",cn:"去背后",ko:"보스 뒤로"},goFrontOrSides:{en:"Go Front / Sides",de:"Gehe nach Vorne/ zu den Seiten",fr:"Allez Devant / Côtés",ja:"前／横へ",cn:"去前侧方",ko:"보스 후방 피하기"},goFront:{en:"Go Front",de:"Geh nach vorn",fr:"Allez Devant",ja:"前へ",cn:"去前面",ko:"앞으로"},getUnder:{en:"Get Under",de:"Unter ihn",fr:"En dessous",ja:"ボスに貼り付く",cn:"去脚下",ko:"보스 아래로"},in:{en:"In",de:"Rein",fr:"Intérieur",ja:"中へ",cn:"靠近",ko:"안으로"},out:{en:"Out",de:"Raus",fr:"Extérieur",ja:"外へ",cn:"远离",ko:"밖으로"},outOfMelee:{en:"Out of melee",de:"Raus aus Nahkampf",fr:"Sortez de la mêlée",ja:"近接の範囲から離れる",cn:"离开近战距离",ko:"근접범위 밖으로"},outOfHitbox:{en:"Out of hitbox",de:"Raus aus der Hitbox",fr:"Extérieur de la hitbox",cn:"离开目标圈",ko:"히트박스 밖으로"},inThenOut:{en:"In => out",de:"Rein, dann raus",fr:"Intérieur, puis extérieur",ja:"中 => 外",cn:"先靠近，再远离",ko:"안으로 => 밖으로"},outThenIn:{en:"Out => in",de:"Raus, dann rein",fr:"Extérieur, puis intérieur",ja:"外 => 中",cn:"先远离，再靠近",ko:"밖으로 => 안으로"},backThenFront:{en:"Back => Front",de:"Nach Hinten, danach nach Vorne",fr:"Derrière puis devant",ja:"後ろ => 前",cn:"后 => 前",ko:"뒤로 => 앞으로"},frontThenBack:{en:"Front => Back",de:"Nach Vorne, danach nach Hinten",fr:"Devant puis derrière",ja:"前 => 後ろ",cn:"前 => 后",ko:"앞으로 => 뒤로"},goIntoMiddle:{en:"Get Middle",de:"in die Mitte gehen",fr:"Allez au milieu",ja:"中へ",cn:"去中间",ko:"중앙으로"},front:{en:"Front",de:"Vorne",fr:"Devant",ja:"前",cn:"前",ko:"앞"},back:{en:"Back",de:"Hinten",fr:"Derrière",ja:"後ろ",cn:"后",ko:"뒤"},right:{en:"Right",de:"Rechts",fr:"À droite",ja:"右へ",cn:"右",ko:"오른쪽"},left:{en:"Left",de:"Links",fr:"À gauche",ja:"左へ",cn:"左",ko:"왼쪽"},getLeftAndWest:{en:"<= Get Left/West",de:"<= Nach Links/Westen",fr:"<= Allez à Gauche/Ouest",ja:"<= 左/西へ",cn:"<= 去左半场",ko:"<= 왼쪽/서쪽"},getRightAndEast:{en:"Get Right/East =>",de:"Nach Rechts/Osten =>",fr:"Allez à Droite/Est =>",ja:"右/東へ =>",cn:"去右半场 =>",ko:"오른쪽/동쪽 =>"},leftThenRight:{en:"Left => Right",de:"Links => Rechts",fr:"À gauche => À droite",ja:"左 => 右",cn:"左 => 右",ko:"왼쪽 => 오른쪽"},rightThenLeft:{en:"Right => Left",de:"Rechts => Links",fr:"À droite => À gauche",ja:"右 => 左",cn:"右 => 左",ko:"오른쪽 => 왼쪽"},goFrontBack:{en:"Go Front/Back",de:"Geh nach Vorne/Hinten",fr:"Allez Devant/Derrière",ja:"縦へ",cn:"去前后",ko:"앞/뒤로"},sides:{en:"Sides",de:"Seiten",fr:"Côtés",ja:"横へ",cn:"去两侧",ko:"양옆으로"},middle:{en:"Middle",de:"Mitte",fr:"Milieu",ja:"中へ",cn:"中间",ko:"중앙"},clockwise:{en:"Clockwise",de:"Im Uhrzeigersinn",fr:"Sens horaire",ja:"時針回り",cn:"顺时针",ko:"시계방향"},counterclockwise:{en:"Counter-clock",de:"Gegen den Uhrzeigersinn",fr:"Anti-horaire",ja:"反時針回り",cn:"逆时针",ko:"반시계방향"},killAdds:{en:"Kill adds",de:"Adds besiegen",fr:"Tuez les adds",ja:"雑魚から倒して",cn:"击杀小怪",ko:"쫄 잡기"},killExtraAdd:{en:"Kill Extra Add",de:"Add besiegen",fr:"Tuez l'add",ja:"雑魚から倒して",cn:"击杀小怪",ko:"쫄 잡기"},awayFromFront:{en:"Away From Front",de:"Weg von Vorne",fr:"Éloignez-vous du devant",ja:"前方から離れる",cn:"远离正面",ko:"보스 전방 피하기"},sleepTarget:{en:"Sleep ${name}",de:"Schlaf auf ${name}",fr:"Sommeil sur ${name}",ja:"${name} にスリプル",cn:"催眠 ${name}",ko:"${name} 슬리플"},stunTarget:{en:"Stun ${name}",de:"Betäubung auf ${name}",fr:"Étourdissez ${name}",ja:"${name} にスタン",cn:"眩晕 ${name}",ko:"${name}기절"},interruptTarget:{en:"interrupt ${name}",de:"unterbreche ${name}",fr:"Interrompez ${name}",ja:"${name} に沈黙",cn:"打断${name}",ko:"${name}기술 시전 끊기"},preyOnYou:{en:"Prey on YOU",de:"Marker auf DIR",fr:"Marquage sur VOUS",ja:"自分にマーキング",cn:"猎物点名",ko:"홍옥징 대상자"},preyOnPlayer:{en:"Prey on ${player}",de:"Marker auf ${player}",fr:"Marquage sur ${player}",ja:"${player}にマーキング",cn:"${player} 的猎物点名",ko:'"${player}" 홍옥징'},awayFromGroup:{en:"Away from Group",de:"Weg von der Gruppe",fr:"Éloignez-vous du groupe",ja:"外へ",cn:"远离人群",ko:"다른 사람들과 떨어지기"},awayFromPlayer:{en:"Away from ${player}",de:"Weg von ${player}",fr:"Éloignez-vous de ${player}",ja:"${player}から離れる",cn:"远离${player}",ko:'"${player}"에게서 멀어지기'},meteorOnYou:{en:"Meteor on YOU",de:"Meteor auf DIR",fr:"Météore sur VOUS",ja:"自分にメテオ",cn:"陨石点名",ko:"나에게 메테오징"},stopMoving:{en:"Stop Moving!",de:"Bewegung stoppen!",fr:"Ne bougez pas !",ja:"移動禁止！",cn:"停止移动！",ko:"이동 멈추기!"},stopEverything:{en:"Stop Everything!",de:"Stoppe Alles!",fr:"Arrêtez tout !",ja:"行動禁止！",cn:"停止行动！",ko:"행동 멈추기!"},moveAway:{en:"Move!",de:"Bewegen!",fr:"Bougez !",ja:"避けて！",cn:"离开原地！",ko:"이동하기!"},moveAround:{en:"Move!",de:"Bewegen!",fr:"Bougez !",ja:"動く！",cn:"保持运动！",ko:"움직이기!"},breakChains:{en:"Break chains",de:"Kette zerbrechen",fr:"Brisez les chaines",ja:"線を切る",cn:"拉断连线",ko:"선 끊기"},moveChainsTogether:{en:"Move chains together",de:"Ketten zusammen bewegen",fr:"Bougez les chaines ensemble",ja:"線同士で一緒に移動",cn:"连线一起移动",ko:"선 붙어서 같이 움직이기"},earthshakerOnYou:{en:"Earth Shaker on YOU",de:"Erdstoß auf DIR",fr:"Marque de terre sur VOUS",ja:"自分にアースシェイカー",cn:"大地摇动点名",ko:"어스징 대상자"},wakeUp:{en:"WAKE UP",de:"AUFWACHEN",fr:"RÉVEILLE-TOI",ja:"目を覚まして！",cn:"醒醒！动一动！！",ko:"일어나세요!"},closeTethersWithPlayer:{en:"Close Tethers (${player})",de:"Nahe Verbindungen (${player})",fr:"Liens proches avec (${player})",ja:"${player}に近づく",cn:"近线 (${player})",ko:"상대와 가까이 붙기 (${player})"},farTethersWithPlayer:{en:"Far Tethers (${player})",de:"Entfernte Verbindungen (${player})",fr:"Liens éloignés avec (${player})",ja:" (${player})から離れる",cn:"远线 (${player})",ko:"상대와 떨어지기 (${player})"},getTowers:{en:"Get Towers",de:"Türme nehmen",fr:"Allez dans les tours",ja:"塔を踏む",cn:"踩塔",ko:"기둥 들어가기"},unknown:{en:"???",de:"???",fr:"???",ja:"???",cn:"???",ko:"???"},cardinals:{en:"Cardinals",de:"Kardinal",fr:"Cardinaux",ja:"十字回避",cn:"去正点",ko:"십자방향으로"},intercards:{en:"Intercards",de:"Interkardinal",fr:"Intercardinal",ja:"斜めへ",cn:"去斜角",ko:"대각선 쪽으로"},north:{en:"North",de:"Norden",fr:"Nord",ja:"北",cn:"上",ko:"북쪽"},south:{en:"South",de:"Süden",fr:"Sud",ja:"南",cn:"下",ko:"남쪽"},east:{en:"East",de:"Osten",fr:"Est",ja:"東",cn:"右",ko:"동쪽"},west:{en:"West",de:"Westen",fr:"Ouest",ja:"西",cn:"左",ko:"서쪽"},northwest:{en:"Northwest",de:"Nordwesten",fr:"Nord-Ouest",ja:"北西",cn:"左上",ko:"북서쪽"},northeast:{en:"Northeast",de:"Nordosten",fr:"Nord-Est",ja:"北東",cn:"右上",ko:"북동쪽"},southwest:{en:"Southwest",de:"Südwesten",fr:"Sud-Ouest",ja:"南西",cn:"左下",ko:"남서쪽"},southeast:{en:"Southeast",de:"Südosten",fr:"Sud-Est",ja:"南東",cn:"右下",ko:"남동쪽"},dirN:{en:"N",de:"N",fr:"N",ja:"北",cn:"上",ko:"북"},dirS:{en:"S",de:"S",fr:"S",ja:"南",cn:"下",ko:"남"},dirE:{en:"E",de:"O",fr:"E",ja:"東",cn:"右",ko:"동"},dirW:{en:"W",de:"W",fr:"O",ja:"西",cn:"左",ko:"서"},dirNW:{en:"NW",de:"NW",fr:"NO",ja:"北西",cn:"左上",ko:"북서"},dirNE:{en:"NE",de:"NO",fr:"NE",ja:"北東",cn:"右上",ko:"북동"},dirSW:{en:"SW",de:"SW",fr:"SO",ja:"南西",cn:"左下",ko:"남서"},dirSE:{en:"SE",de:"SO",fr:"SE",ja:"南東",cn:"右下",ko:"남동"},dirNNE:{en:"NNE",de:"NNO",fr:"NNE",ja:"北北東(1時)",cn:"上偏右",ko:"1시"},dirENE:{en:"ENE",de:"ONO",fr:"ENE",ja:"東北東(2時)",cn:"右偏上",ko:"2시"},dirESE:{en:"ESE",de:"OSO",fr:"ESE",ja:"東南東(4時)",cn:"右偏下",ko:"4시"},dirSSE:{en:"SSE",de:"SSO",fr:"SSE",ja:"南南東(5時)",cn:"下偏右",ko:"5시"},dirSSW:{en:"SSW",de:"SSW",fr:"SSO",ja:"南南西(7時)",cn:"下偏左",ko:"7시"},dirWSW:{en:"WSW",de:"WSW",fr:"OSO",ja:"西南西(8時)",cn:"左偏下",ko:"8시"},dirWNW:{en:"WNW",de:"WNW",fr:"ONO",ja:"西北西(10時)",cn:"左偏上",ko:"10시"},dirNNW:{en:"NNW",de:"NNW",fr:"NNO",ja:"北北西(11時)",cn:"上偏左",ko:"11시"},tank:{en:"Tank",de:"Tank",fr:"Tank",ja:"タンク",cn:"坦克",ko:"탱"},healer:{en:"Healer",de:"Heiler",fr:"Healer",ja:"ヒーラー",cn:"治疗",ko:"힐"},dps:{en:"DPS",de:"DPS",fr:"DPS",ja:"DPS",cn:"DPS",ko:"딜러"},next:{en:" => ",de:" => ",fr:" => ",ja:" => ",cn:" => ",ko:" => "},and:{en:" + ",de:" + ",fr:" + ",cn:" + ",ko:" + "},or:{en:" / ",de:" / ",fr:" / ",cn:" / ",ko:" / "},num0:numberToOutputString(0),num1:numberToOutputString(1),num2:numberToOutputString(2),num3:numberToOutputString(3),num4:numberToOutputString(4),num5:numberToOutputString(5),num6:numberToOutputString(6),num7:numberToOutputString(7),num8:numberToOutputString(8),num9:numberToOutputString(9)},severityMap={info:"infoText",alert:"alertText",alarm:"alarmText"},getText=e=>{if(!(e in severityMap))throw new Error(`Invalid severity: ${e}.`);return severityMap[e]},defaultInfoText=e=>e?getText(e):"infoText",defaultAlertText=e=>e?getText(e):"alertText",defaultAlarmText=e=>e?getText(e):"alarmText",getTarget=e=>{if(e.target!==e.source&&e.target!=="")return e.target},getSource=e=>e==null?void 0:e.source,combineFuncs=function(e,t,o,l){const i={};return e!==o?(i[e]=t,i[o]=l):i[e]=(a,n,s)=>t(a,n,s)??l(a,n,s),i},isPlayerId=e=>e!==void 0&&!e.startsWith("4"),staticResponse=(e,t)=>(o,l,i)=>(i.responseOutputStrings={text:t},{[e]:(a,n,s)=>{var r;return(r=s.text)==null?void 0:r.call(s)}}),Responses$1={tankBuster:(e,t)=>{const o={noTarget:_Outputs.tankBuster,busterOnYou:_Outputs.tankBusterOnYou,busterOnTarget:_Outputs.tankBusterOnPlayer},l=(n,s,r)=>{var d,g;const u=getTarget(s);if(u===void 0)return n.role!=="tank"&&n.role!=="healer"||(d=r.noTarget)==null?void 0:d.call(r);if(u===n.me)return(g=r.busterOnYou)==null?void 0:g.call(r)},i=(n,s,r)=>{var d,g;const u=getTarget(s);if(u===void 0)return n.role==="tank"||n.role==="healer"||(d=r.noTarget)==null?void 0:d.call(r);if(u!==n.me)return(g=r.busterOnTarget)==null?void 0:g.call(r,{player:n.party.member(u)})},a=combineFuncs(defaultAlertText(e),l,defaultInfoText(t),i);return(n,s,r)=>(r.responseOutputStrings=o,a)},tankBusterSwap:(e,t)=>{const o={noTarget:_Outputs.tankBuster,tankSwap:_Outputs.tankSwap,busterOnYou:_Outputs.tankBusterOnYou,busterOnTarget:_Outputs.tankBusterOnPlayer},l=(n,s,r)=>{var d;const u=getTarget(s);if(n.role==="tank"&&u!==n.me)return(d=r.tankSwap)==null?void 0:d.call(r)},i=(n,s,r)=>{var d,g,h;const u=getTarget(s);if(!(n.role==="tank"&&u!==n.me))return u===n.me?(d=r.busterOnYou)==null?void 0:d.call(r):u===void 0?(g=r.noTarget)==null?void 0:g.call(r):(h=r.busterOnTarget)==null?void 0:h.call(r,{player:n.party.member(u)})},a=combineFuncs(defaultAlarmText(t),l,defaultAlertText(e),i);return(n,s,r)=>(r.responseOutputStrings=o,a)},tankCleave:e=>(t,o,l)=>(l.responseOutputStrings={cleaveOnYou:_Outputs.tankCleaveOnYou,cleaveNoTarget:_Outputs.tankCleave,avoidCleave:_Outputs.avoidTankCleave},{[defaultInfoText(e)]:(i,a,n)=>{var r,u,d;return getTarget(a)===i.me?(r=n.cleaveOnYou)==null?void 0:r.call(n):i.role==="tank"||i.job==="BLU"?(u=n.cleaveNoTarget)==null?void 0:u.call(n):(d=n.avoidCleave)==null?void 0:d.call(n)}}),sharedTankBuster:(e,t)=>{const o={sharedTankbusterOnYou:_Outputs.sharedTankbusterOnYou,sharedTankbusterOnTarget:_Outputs.sharedTankbusterOnPlayer,sharedTankbuster:_Outputs.sharedTankbuster,avoidCleave:_Outputs.avoidTankCleave},l=(n,s,r)=>{var d,g,h;const u=getTarget(s);if(u===void 0)return n.role!=="tank"&&n.role!=="healer"||(d=r.sharedTankbuster)==null?void 0:d.call(r);if(u===n.me)return(g=r.sharedTankbusterOnYou)==null?void 0:g.call(r);if(n.role==="tank"||n.role==="healer")return(h=r.sharedTankbusterOnTarget)==null?void 0:h.call(r,{player:n.party.member(u)})},i=(n,s,r)=>{var d,g;const u=getTarget(s);if(u===void 0)return n.role==="tank"||n.role==="healer"||(d=r.avoidCleave)==null?void 0:d.call(r);if(!(u===n.me||n.role==="tank"||n.role==="healer"))return(g=r.avoidCleave)==null?void 0:g.call(r)},a=combineFuncs(defaultAlertText(e),l,defaultInfoText(t),i);return(n,s,r)=>(r.responseOutputStrings=o,a)},miniBuster:e=>staticResponse(defaultInfoText(e),_Outputs.miniBuster),aoe:e=>staticResponse(defaultInfoText(e),_Outputs.aoe),bigAoe:e=>staticResponse(defaultInfoText(e),_Outputs.bigAoe),bleedAoe:e=>staticResponse(defaultInfoText(e),_Outputs.bleedAoe),spread:e=>staticResponse(defaultInfoText(e),_Outputs.spread),protean:e=>staticResponse(defaultInfoText(e),_Outputs.protean),stackMarker:e=>staticResponse(defaultAlertText(e),_Outputs.stackMarker),getTogether:e=>staticResponse(defaultAlertText(e),_Outputs.getTogether),stackMarkerOn:e=>(t,o,l)=>(l.responseOutputStrings={stackOnYou:_Outputs.stackOnYou,stackOnTarget:_Outputs.stackOnPlayer,stackMarker:_Outputs.stackMarker},{[defaultAlertText(e)]:(i,a,n)=>{var r,u,d;const s=getTarget(a);return s===i.me?(r=n.stackOnYou)==null?void 0:r.call(n):s===void 0?(u=n.stackMarker)==null?void 0:u.call(n):(d=n.stackOnTarget)==null?void 0:d.call(n,{player:i.party.member(s)})}}),stackMiddle:e=>staticResponse(defaultInfoText(e),_Outputs.stackMiddle),doritoStack:e=>staticResponse(defaultAlertText(e),_Outputs.doritoStack),spreadThenStack:e=>staticResponse(defaultAlertText(e),_Outputs.spreadThenStack),stackThenSpread:e=>staticResponse(defaultAlertText(e),_Outputs.stackThenSpread),knockback:e=>staticResponse(defaultAlertText(e),_Outputs.knockback),knockbackOn:(e,t)=>{const o={knockback:_Outputs.knockback,knockbackOnYou:_Outputs.knockbackOnYou,knockbackOnTarget:_Outputs.knockbackOnPlayer},l=(n,s,r)=>{var d;if(getTarget(s)===n.me)return(d=r.knockbackOnYou)==null?void 0:d.call(r)},i=(n,s,r)=>{var d,g;const u=getTarget(s);if(u===void 0)return(d=r.knockback)==null?void 0:d.call(r);if(u!==n.me)return(g=r.knockbackOnTarget)==null?void 0:g.call(r,{player:n.party.member(u)})},a=combineFuncs(defaultInfoText(e),l,defaultInfoText(t),i);return(n,s,r)=>(r.responseOutputStrings=o,a)},drawIn:e=>staticResponse(defaultInfoText(e),_Outputs.drawIn),lookTowards:e=>staticResponse(defaultInfoText(e),_Outputs.lookTowardsBoss),lookAway:e=>staticResponse(defaultInfoText(e),_Outputs.lookAway),lookAwayFromTarget:e=>(t,o,l)=>(l.responseOutputStrings={lookAway:_Outputs.lookAway,lookAwayFrom:_Outputs.lookAwayFromTarget},{[defaultAlertText(e)]:(i,a,n)=>{var u,d;const s=getTarget(a);if(s===i.me)return;if(s===void 0)return(u=n.lookAway)==null?void 0:u.call(n);const r=isPlayerId(a==null?void 0:a.targetId)?i.party.member(s):s;return(d=n.lookAwayFrom)==null?void 0:d.call(n,{name:r})}}),lookAwayFromSource:e=>(t,o,l)=>(l.responseOutputStrings={lookAwayFrom:_Outputs.lookAwayFromTarget},{[defaultAlertText(e)]:(i,a,n)=>{var u;const s=getSource(a);if(s===i.me)return;const r=isPlayerId(a==null?void 0:a.sourceId)?i.party.member(s):s;return(u=n.lookAwayFrom)==null?void 0:u.call(n,{name:r})}}),getBehind:e=>staticResponse(defaultAlertText(e),_Outputs.getBehind),goFrontOrSides:e=>staticResponse(defaultAlertText(e),_Outputs.goFrontOrSides),getUnder:e=>staticResponse(defaultInfoText(e),_Outputs.getUnder),getIn:e=>staticResponse(defaultAlertText(e),_Outputs.in),getOut:e=>staticResponse(defaultAlertText(e),_Outputs.out),outOfMelee:e=>staticResponse(defaultInfoText(e),_Outputs.outOfMelee),getInThenOut:e=>staticResponse(defaultInfoText(e),_Outputs.inThenOut),getOutThenIn:e=>staticResponse(defaultInfoText(e),_Outputs.outThenIn),getBackThenFront:e=>staticResponse(defaultInfoText(e),_Outputs.backThenFront),getFrontThenBack:e=>staticResponse(defaultInfoText(e),_Outputs.frontThenBack),goFront:e=>staticResponse(defaultAlertText(e),_Outputs.goFront),goMiddle:e=>staticResponse(defaultAlertText(e),_Outputs.goIntoMiddle),goRight:e=>staticResponse(defaultAlertText(e),_Outputs.right),goLeft:e=>staticResponse(defaultAlertText(e),_Outputs.left),goWest:e=>staticResponse(defaultAlertText(e),_Outputs.getLeftAndWest),goEast:e=>staticResponse(defaultAlertText(e),_Outputs.getRightAndEast),goLeftThenRight:e=>staticResponse(defaultAlertText(e),_Outputs.leftThenRight),goRightThenLeft:e=>staticResponse(defaultAlertText(e),_Outputs.rightThenLeft),goFrontBack:e=>staticResponse(defaultAlertText(e),_Outputs.goFrontBack),goSides:e=>staticResponse(defaultAlertText(e),_Outputs.sides),killAdds:e=>staticResponse(defaultInfoText(e),_Outputs.killAdds),killExtraAdd:e=>staticResponse(defaultInfoText(e),_Outputs.killExtraAdd),awayFromFront:e=>staticResponse(defaultAlertText(e),_Outputs.awayFromFront),sleep:e=>(t,o,l)=>(l.responseOutputStrings={sleep:_Outputs.sleepTarget},{[defaultAlertText(e)]:(i,a,n)=>{var r;const s=getSource(a);return(r=n.sleep)==null?void 0:r.call(n,{name:s})}}),stunOrInterruptIfPossible:e=>(t,o,l)=>(l.responseOutputStrings={stun:_Outputs.stunTarget,interrupt:_Outputs.interruptTarget},{[defaultAlertText(e)]:(i,a,n)=>{var r,u;const s=getSource(a);if(i.CanSilence())return(r=n.interrupt)==null?void 0:r.call(n,{name:s});if(i.CanStun())return(u=n.stun)==null?void 0:u.call(n,{name:s})}}),stun:e=>(t,o,l)=>(l.responseOutputStrings={stun:_Outputs.stunTarget},{[defaultAlertText(e)]:(i,a,n)=>{var r;const s=getSource(a);return(r=n.stun)==null?void 0:r.call(n,{name:s})}}),stunIfPossible:e=>(t,o,l)=>(l.responseOutputStrings={stun:_Outputs.stunTarget},{[defaultAlertText(e)]:(i,a,n)=>{var r;const s=getSource(a);if(i.CanStun())return(r=n.stun)==null?void 0:r.call(n,{name:s})}}),interrupt:e=>(t,o,l)=>(l.responseOutputStrings={interrupt:_Outputs.interruptTarget},{[defaultAlertText(e)]:(i,a,n)=>{var r;const s=getSource(a);return(r=n.interrupt)==null?void 0:r.call(n,{name:s})}}),interruptIfPossible:e=>(t,o,l)=>(l.responseOutputStrings={interrupt:_Outputs.interruptTarget},{[defaultAlertText(e)]:(i,a,n)=>{var r;const s=getSource(a);if(i.CanSilence())return(r=n.interrupt)==null?void 0:r.call(n,{name:s})}}),preyOn:(e,t)=>{const o={preyOnYou:_Outputs.preyOnYou,preyOnTarget:_Outputs.preyOnPlayer},l=(n,s,r)=>{var d;const u=getTarget(s);if(n.me===u)return(d=r.preyOnYou)==null?void 0:d.call(r)},i=(n,s,r)=>{var g,h;const u=getTarget(s),d=u===void 0?(g=r.unknown)==null?void 0:g.call(r):n.party.member(u);if(u!==n.me)return(h=r.preyOnTarget)==null?void 0:h.call(r,{player:d})},a=combineFuncs(defaultAlertText(e),l,defaultInfoText(t),i);return(n,s,r)=>(r.responseOutputStrings=o,a)},awayFrom:e=>(t,o,l)=>(l.responseOutputStrings={awayFromGroup:_Outputs.awayFromGroup,awayFromTarget:_Outputs.awayFromPlayer,unknown:_Outputs.unknown},{[defaultAlertText(e)]:(i,a,n)=>{var u,d,g;const s=getTarget(a);if(i.me===s)return(u=n.awayFromGroup)==null?void 0:u.call(n);const r=s===void 0?(d=n.unknown)==null?void 0:d.call(n):i.party.member(s);return(g=n.awayFromTarget)==null?void 0:g.call(n,{player:r})}}),meteorOnYou:e=>staticResponse(defaultAlarmText(e),_Outputs.meteorOnYou),stopMoving:e=>staticResponse(defaultAlarmText(e),_Outputs.stopMoving),stopEverything:e=>staticResponse(defaultAlarmText(e),_Outputs.stopEverything),moveAway:e=>staticResponse(defaultInfoText(e),_Outputs.moveAway),moveAround:e=>staticResponse(defaultInfoText(e),_Outputs.moveAround),breakChains:e=>staticResponse(defaultInfoText(e),_Outputs.breakChains),moveChainsTogether:e=>staticResponse(defaultInfoText(e),_Outputs.moveChainsTogether),earthshaker:e=>(t,o,l)=>(l.responseOutputStrings={earthshaker:_Outputs.earthshakerOnYou},{[defaultAlertText(e)]:(i,a,n)=>{var r;if(getTarget(a)===i.me)return(r=n.earthshaker)==null?void 0:r.call(n)}}),wakeUp:e=>staticResponse(defaultAlarmText(e),_Outputs.wakeUp),getTowers:e=>staticResponse(defaultInfoText(e),_Outputs.getTowers)},responseMapTypeAssertion=Responses$1;console.assert(responseMapTypeAssertion);const nameToJobEnum={NONE:0,GLA:1,PGL:2,MRD:3,LNC:4,ARC:5,CNJ:6,THM:7,CRP:8,BSM:9,ARM:10,GSM:11,LTW:12,WVR:13,ALC:14,CUL:15,MIN:16,BTN:17,FSH:18,PLD:19,MNK:20,WAR:21,DRG:22,BRD:23,WHM:24,BLM:25,ACN:26,SMN:27,SCH:28,ROG:29,NIN:30,MCH:31,DRK:32,AST:33,SAM:34,RDM:35,BLU:36,GNB:37,DNC:38,RPR:39,SGE:40,VPR:41,PCT:42},allJobs=Object.keys(nameToJobEnum),allRoles=["tank","healer","dps","crafter","gatherer","none"],tankJobs=["GLA","PLD","MRD","WAR","DRK","GNB"],healerJobs=["CNJ","WHM","SCH","AST","SGE"],meleeDpsJobs=["PGL","MNK","LNC","DRG","ROG","NIN","SAM","RPR","VPR"],rangedDpsJobs=["ARC","BRD","DNC","MCH"],casterDpsJobs=["BLU","RDM","BLM","SMN","ACN","THM","PCT"],dpsJobs=[...meleeDpsJobs,...rangedDpsJobs,...casterDpsJobs],craftingJobs=["CRP","BSM","ARM","GSM","LTW","WVR","ALC","CUL"],gatheringJobs=["MIN","BTN","FSH"],stunJobs=["BLU",...tankJobs,...meleeDpsJobs],silenceJobs=["BLU",...tankJobs,...rangedDpsJobs],sleepJobs=[...casterDpsJobs,...healerJobs],feintJobs=[...meleeDpsJobs],addleJobs=[...casterDpsJobs],cleanseJobs=["BLU","BRD",...healerJobs],jobToRoleMap=(()=>{const e=(o,l,i)=>{l.forEach(a=>o.set(a,i))},t=new Map([["NONE","none"]]);return e(t,tankJobs,"tank"),e(t,healerJobs,"healer"),e(t,dpsJobs,"dps"),e(t,craftingJobs,"crafter"),e(t,gatheringJobs,"gatherer"),t})(),watchCombatantMap=[],shouldCancelWatch=(e,t)=>!!(t.cancel||e.maxDuration!==void 0&&Date.now()-t.start>e.maxDuration),defaultWatchCombatant=(e,t)=>new Promise((o,l)=>{const i=e.delay??1e3,a={call:"getCombatants"};e.ids&&(a.ids=e.ids),e.names&&(a.names=e.names),e.props&&(a.props=e.props);const n={cancel:!1,start:Date.now()};watchCombatantMap.push(n);const s=()=>{if(shouldCancelWatch(e,n)){l(new Error("cancelled"));return}callOverlayHandler(a).then(r=>{t(r)?o():window.setTimeout(s,i)})};window.setTimeout(s,i)});let watchCombatantOverride,clearCombatantsOverride;const defaultClearCombatants=()=>{for(;watchCombatantMap.length>0;){const e=watchCombatantMap.pop();e&&(e.cancel=!0)}},watchCombatant=(e,t)=>watchCombatantOverride?watchCombatantOverride(e,t):defaultWatchCombatant(e,t),output8Dir=["dirN","dirNE","dirE","dirSE","dirS","dirSW","dirW","dirNW"],output16Dir=["dirN","dirNNE","dirNE","dirENE","dirE","dirESE","dirSE","dirSSE","dirS","dirSSW","dirSW","dirWSW","dirW","dirWNW","dirNW","dirNNW"],outputCardinalDir=["dirN","dirE","dirS","dirW"],outputIntercardDir=["dirNE","dirSE","dirSW","dirNW"],outputStrings16Dir={dirN:_Outputs.dirN,dirNNE:_Outputs.dirNNE,dirNE:_Outputs.dirNE,dirENE:_Outputs.dirENE,dirE:_Outputs.dirE,dirESE:_Outputs.dirESE,dirSE:_Outputs.dirSE,dirSSE:_Outputs.dirSSE,dirS:_Outputs.dirS,dirSSW:_Outputs.dirSSW,dirSW:_Outputs.dirSW,dirWSW:_Outputs.dirWSW,dirW:_Outputs.dirW,dirWNW:_Outputs.dirWNW,dirNW:_Outputs.dirNW,dirNNW:_Outputs.dirNNW,unknown:_Outputs.unknown},outputStrings8Dir={dirN:_Outputs.dirN,dirNE:_Outputs.dirNE,dirE:_Outputs.dirE,dirSE:_Outputs.dirSE,dirS:_Outputs.dirS,dirSW:_Outputs.dirSW,dirW:_Outputs.dirW,dirNW:_Outputs.dirNW,unknown:_Outputs.unknown},outputStringsCardinalDir={dirN:_Outputs.dirN,dirE:_Outputs.dirE,dirS:_Outputs.dirS,dirW:_Outputs.dirW,unknown:_Outputs.unknown},outputStringsIntercardDir={dirNE:_Outputs.dirNE,dirSE:_Outputs.dirSE,dirSW:_Outputs.dirSW,dirNW:_Outputs.dirNW,unknown:_Outputs.unknown},xyTo16DirNum=(e,t,o,l)=>(e=e-o,t=t-l,Math.round(8-8*Math.atan2(e,t)/Math.PI)%16),xyTo8DirNum=(e,t,o,l)=>(e=e-o,t=t-l,Math.round(4-4*Math.atan2(e,t)/Math.PI)%8),xyTo4DirNum=(e,t,o,l)=>(e=e-o,t=t-l,Math.round(2-2*Math.atan2(e,t)/Math.PI)%4),xyTo4DirIntercardNum=(e,t,o,l)=>(e=e-o,t=t-l,Math.round(2-2*(Math.PI/4+Math.atan2(e,t))/Math.PI)%4),hdgTo8DirNum=e=>(Math.round(4-4*e/Math.PI)%8+8)%8,hdgTo4DirNum=e=>(Math.round(2-e*2/Math.PI)%4+4)%4,outputFrom8DirNum=e=>output8Dir[e]??"unknown",outputFromCardinalNum=e=>outputCardinalDir[e]??"unknown",outputFromIntercardNum=e=>outputIntercardDir[e]??"unknown",Directions$1={output8Dir,output16Dir,outputCardinalDir,outputIntercardDir,outputStrings16Dir,outputStrings8Dir,outputStringsCardinalDir,outputStringsIntercardDir,xyTo16DirNum,xyTo8DirNum,xyTo4DirNum,hdgTo8DirNum,hdgTo4DirNum,outputFrom8DirNum,outputFromCardinalNum,combatantStatePosTo8Dir:(e,t,o)=>xyTo8DirNum(e.PosX,e.PosY,t,o),combatantStatePosTo8DirOutput:(e,t,o)=>{const l=xyTo8DirNum(e.PosX,e.PosY,t,o);return outputFrom8DirNum(l)},combatantStateHdgTo8Dir:e=>hdgTo8DirNum(e.Heading),combatantStateHdgTo8DirOutput:e=>{const t=hdgTo8DirNum(e.Heading);return outputFrom8DirNum(t)},addedCombatantPosTo8Dir:(e,t,o)=>{const l=parseFloat(e.x),i=parseFloat(e.y);return xyTo8DirNum(l,i,t,o)},addedCombatantPosTo8DirOutput:(e,t,o)=>{const l=parseFloat(e.x),i=parseFloat(e.y),a=xyTo8DirNum(l,i,t,o);return outputFrom8DirNum(a)},addedCombatantHdgTo8Dir:e=>{const t=parseFloat(e.heading);return hdgTo8DirNum(t)},addedCombatantHdgTo8DirOutput:e=>{const t=parseFloat(e.heading),o=hdgTo8DirNum(t);return outputFrom8DirNum(o)},xyTo8DirOutput:(e,t,o,l)=>{const i=xyTo8DirNum(e,t,o,l);return outputFrom8DirNum(i)},xyToCardinalDirOutput:(e,t,o,l)=>{const i=xyTo4DirNum(e,t,o,l);return outputFromCardinalNum(i)},xyToIntercardDirOutput:(e,t,o,l)=>{const i=xyTo4DirIntercardNum(e,t,o,l);return outputFromIntercardNum(i)}},Util$1={jobEnumToJob:e=>allJobs.find(o=>nameToJobEnum[o]===e)??"NONE",jobToJobEnum:e=>nameToJobEnum[e],jobToRole:e=>jobToRoleMap.get(e)??"none",getAllRoles:()=>allRoles,isTankJob:e=>tankJobs.includes(e),isHealerJob:e=>healerJobs.includes(e),isMeleeDpsJob:e=>meleeDpsJobs.includes(e),isRangedDpsJob:e=>rangedDpsJobs.includes(e),isCasterDpsJob:e=>casterDpsJobs.includes(e),isDpsJob:e=>dpsJobs.includes(e),isCraftingJob:e=>craftingJobs.includes(e),isGatheringJob:e=>gatheringJobs.includes(e),isCombatJob:e=>!craftingJobs.includes(e)&&!gatheringJobs.includes(e),canStun:e=>stunJobs.includes(e),canSilence:e=>silenceJobs.includes(e),canSleep:e=>sleepJobs.includes(e),canCleanse:e=>cleanseJobs.includes(e),canFeint:e=>feintJobs.includes(e),canAddle:e=>addleJobs.includes(e),watchCombatant,clearWatchCombatants:()=>{clearCombatantsOverride!==void 0?clearCombatantsOverride():defaultClearCombatants()},setWatchCombatantOverride:(e,t)=>{watchCombatantOverride=e,clearCombatantsOverride=t},gameLogCodes,actorControlType,shortName:(e,t)=>{if(typeof e!="string")return typeof e<"u"&&console.error("called ShortNamify with non-string"),"???";const o=t[e];if(o!==void 0)return o;const l=e.indexOf(" ");return l<0?e:e.slice(0,l)}},Conditions=_Conditions,ContentType=ContentType$1,NetRegexes=NetRegexes$1,Regexes=Regexes$1,Responses=Responses$1,Outputs=_Outputs,Util=Util$1,Directions=Directions$1,ZoneId=ZoneId$1,ZoneInfo=data;console.assert(Conditions);console.assert(ContentType);console.assert(NetRegexes);console.assert(Regexes);console.assert(Responses);console.assert(Outputs);console.assert(Util);console.assert(Directions);console.assert(ZoneId);console.assert(ZoneInfo);class UserConfig{constructor(){w(this,"optionTemplates",{});w(this,"userFileCallbacks",{});w(this,"savedConfig",{})}getDefaultBaseOptions(){return{ParserLanguage:"en",ShortLocale:"en",DisplayLanguage:"en",TextAlertsEnabled:!0,SoundAlertsEnabled:!0,SpokenAlertsEnabled:!1,GroupSpokenAlertsEnabled:!1,SystemInfo:{cactbotVersion:"0.0.0.0",overlayPluginVersion:"0.0.0.0",ffxivPluginVersion:"0.0.0.0",actVersion:"0.0.0.0",gameRegion:"International"},Debug:!1}}evalUserFile(content,options){const Options=options;console.assert(Options),eval(content)}registerOptions(e,t,o){this.optionTemplates[e]=t,o&&(this.userFileCallbacks[e]=o)}sortUserFiles(e){const t={};for(const o of e)t[o]=o.toUpperCase().split(/[/\\]/);return e.sort((o,l)=>{const i=t[o],a=t[l];if(i===void 0||a===void 0)throw new UnreachableCode;const n=Math.max(i.length,a.length);for(let s=0;s<n;++s){const r=i[s],u=a[s];if(r===void 0||u===void 0)throw new UnreachableCode;const d=i.length-1===s,g=a.length-1===s;if(d&&g){const h=r.replace(/\.[^\.]*$/,""),y=u.replace(/\.[^\.]*$/,""),S=h.localeCompare(y);return S||r.localeCompare(u)}else if(!d&&!g){const h=r.localeCompare(u);if(h)return h}if(i.length-1<=s)return 1;if(a.length-1<=s)return-1}return 0})}filterUserFiles(e,t,o){const l=o.toLowerCase(),i=t.toLowerCase();return e.filter(a=>{const n=a.toLowerCase();return n.endsWith(l)?!!(n===`${i}${l}`||n.startsWith(`${i}/`)||n.startsWith(`${i}\\`)):!1})}getUserConfigLocation(e,t,o){let l=!1;const i=()=>{l||(l=!0,window.location.reload())};addOverlayListener("onUserFileChanged",()=>{i()}),addOverlayListener("onForceReload",()=>{i()}),this.loadUserFiles(e,t,o)}loadUserFiles(e,t,o,l=!0){const i=callOverlayHandler({call:"cactbotLoadData",overlay:"options"}),a=async n=>{var D,R,C;const s=`${n.detail.userLocation.replace(/[/\\]*$/,"")}\\`,r=n.detail.localUserFiles;if(t.SystemInfo={cactbotVersion:n.detail.cactbotVersion,overlayPluginVersion:n.detail.overlayPluginVersion,ffxivPluginVersion:n.detail.ffxivPluginVersion,actVersion:n.detail.actVersion,gameRegion:n.detail.gameRegion},n.detail.language&&(t.ParserLanguage=n.detail.language,t.ShortLocale=n.detail.language,t.DisplayLanguage=n.detail.language),n.detail.parserLanguage&&(t.ParserLanguage=n.detail.parserLanguage,t.Language=n.detail.parserLanguage),n.detail.systemLocale){t.SystemLocale=n.detail.systemLocale;let T=n.detail.systemLocale.slice(0,2);T==="zh"&&(T="cn"),isLang(T)?t.ShortLocale=T:t.ShortLocale=t.ParserLanguage}const u=n.detail.displayLanguage;isLang(u)?t.DisplayLanguage=u:t.DisplayLanguage=t.ParserLanguage||"en",document.documentElement.classList.add(`lang-${t.DisplayLanguage}`),document.documentElement.lang=langToLocale(t.DisplayLanguage),this.addUnlockText(t.DisplayLanguage),this.savedConfig=((D=await i)==null?void 0:D.data)??{};const d=this.optionTemplates[e];if(d!==void 0){const T=this.savedConfig[e]??{};this.processOptions(t,t,T,d.options),d.processExtraOptions&&d.processExtraOptions(t,T)}const h=t.Debug!==void 0&&t.Debug!==!1?T=>console.log(T):()=>{},y={raidboss:["Triggers"]};y[e]=y[e]||[];const S={};if(r){const T=this.sortUserFiles(Object.keys(r)),_=this.filterUserFiles(T,e,".js"),E=l?this.filterUserFiles(T,e,".css"):[];for(const v of _)try{h(`local user file: ${s}${v}`),this.evalUserFile(r[v]??"",t);for(const O of y[e]??[]){const N=S[O];N!=null&&N!==t[O]&&console.log(`*** WARNING: ${s}${v} overwrites Options.${O} from previous files.`),S[O]=t[O]}(C=(R=this.userFileCallbacks)[e])==null||C.call(R,v,r,t,s)}catch(O){console.log("*** ERROR IN USER FILE ***"),console.log(O)}t.Skin!==void 0&&this.handleSkin(t.Skin);for(const v of E){h(`local user file: ${s}${v}`);const O=document.createElement("style"),N=r[v];N!==void 0&&(O.innerText=N);const A=document.getElementsByTagName("head")[0];A&&A.appendChild(O)}}o(),callOverlayHandler({call:"cactbotRequestState"})};callOverlayHandler({call:"cactbotLoadUser",source:location.href,overlayName:e}).then(n=>{if(document.readyState!=="loading"){a(n);return}document.addEventListener("DOMContentLoaded",()=>{a(n)})})}handleSkin(e){if(!e||e==="default")return;const t=`../raidboss/skins/${e}/${e}.css`;this.appendCSSLink(t)}appendJSLink(e){const t=document.createElement("script");t.setAttribute("type","text/javascript"),t.setAttribute("src",e),t.setAttribute("async","false");const o=document.getElementsByTagName("head")[0];o&&o.appendChild(t)}appendCSSLink(e){const t=document.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href",e);const o=document.getElementsByTagName("head")[0];o&&o.appendChild(t)}processOptions(e,t,o,l){if(l!==void 0)for(const i of l){let a;typeof i.default=="function"?a=i.default(e):a=i.default;let n=!0;if(typeof o=="object"&&!Array.isArray(o)&&i.id in o){const s=o[i.id];s!==void 0&&s!==""&&(a=s,n=!1)}if(i.setterFunc){const s=i.setterFunc(a,e,n);s!==void 0&&(t[i.id]=s)}else i.type==="integer"?typeof a=="number"?t[i.id]=Math.floor(a):typeof a=="string"&&(t[i.id]=parseInt(a)):i.type==="float"?typeof a=="number"?t[i.id]=a:typeof a=="string"&&(t[i.id]=parseFloat(a)):t[i.id]=a}}addUnlockText(e){const t={en:"🔓 Unlocked (lock overlay before using)",de:"🔓 Entsperrt (Sperre das Overlay vor der Nutzung)",fr:"🔓 Débloqué (Bloquez l'overlay avant utilisation)",ja:"🔓 ロック解除 (オーバーレイを使用する前にロックしてください)",cn:"🔓 已解除锁定 (你需要将此悬浮窗锁定后方可使用)",ko:"🔓 위치 잠금 해제됨 (사용하기 전에 위치 잠금을 설정하세요)"},o="cactbot-unlocked-text";let l=document.getElementById(o);l||(l=document.createElement("div"),l.id=o,l.classList.add("text"),l.style.display="none",document.body.append(l)),l.innerHTML=t[e]||t.en}}const UserConfig$1=new UserConfig;typeof document<"u"&&document.addEventListener("onOverlayStateUpdate",e=>{const t=document.documentElement.classList;e.detail.isLocked?t.remove("resize-handle","unlocked"):t.add("resize-handle","unlocked")});const localeLines={countdownStart:{en:"Battle commencing in (?<time>\\y{Float}) seconds! \\((?<player>.*?)\\)",de:"Noch (?<time>\\y{Float}) Sekunden bis Kampfbeginn! \\((?<player>.*?)\\)",fr:"Début du combat dans (?<time>\\y{Float}) secondes[ ]?! \\((?<player>.*?)\\)",ja:"戦闘開始まで(?<time>\\y{Float})秒！ （(?<player>.*?)）",cn:"距离战斗开始还有(?<time>\\y{Float})秒！ （(?<player>.*?)）",ko:"전투 시작 (?<time>\\y{Float})초 전! \\((?<player>.*?)\\)"},countdownEngage:{en:"Engage!",de:"Start!",fr:"À l'attaque[ ]?!",ja:"戦闘開始！",cn:"战斗开始！",ko:"전투 시작!"},countdownCancel:{en:"Countdown canceled by (?<player>\\y{Name})",de:"(?<player>\\y{Name}) hat den Countdown abgebrochen",fr:"Le compte à rebours a été interrompu par (?<player>\\y{Name})[ ]?\\.",ja:"(?<player>\\y{Name})により、戦闘開始カウントがキャンセルされました。",cn:"(?<player>\\y{Name})取消了战斗开始倒计时。",ko:"(?<player>\\y{Name}) 님이 초읽기를 취소했습니다\\."},areaSeal:{en:"(?<area>.*?) will be sealed off in (?<time>\\y{Float}) seconds!",de:"Noch (?<time>\\y{Float}) Sekunden, bis sich (?<area>.*?) schließt",fr:"Fermeture (?<area>.*?) dans (?<time>\\y{Float}) secondes[ ]?\\.",ja:"(?<area>.*?)の封鎖まであと(?<time>\\y{Float})秒",cn:"距(?<area>.*?)被封锁还有(?<time>\\y{Float})秒",ko:"(?<time>\\y{Float})초 후에 (?<area>.*?)(이|가) 봉쇄됩니다\\."},areaUnseal:{en:"(?<area>.*?) is no longer sealed.",de:"(?<area>.*?) öffnet sich erneut.",fr:"Ouverture (?<area>.*?)[ ]?!",ja:"(?<area>.*?)の封鎖が解かれた……",cn:"(?<area>.*?)的封锁解除了",ko:"(?<area>.*?)의 봉쇄가 해제되었습니다\\."},craftingStart:{en:"You begin synthesizing (?<count>(an?|\\d+) )?(?<recipe>.*)\\.",de:"Du hast begonnen, durch Synthese (?<count>(ein(e|es|em|er)?|\\d+) )?(?<recipe>.*) herzustellen\\.",fr:"Vous commencez à fabriquer (?<count>(une?|\\d+) )?(?<recipe>.*)\\.",ja:"(?<player>\\y{Name})は(?<recipe>.*)(×(?<count>\\d+))?の製作を開始した。",cn:"(?<player>\\y{Name})开始制作“(?<recipe>.*)”(×(?<count>\\d+))?。",ko:"(?<recipe>.*)(×(?<count>\\d+)개)? 제작을 시작합니다\\."},trialCraftingStart:{en:"You begin trial synthesis of (?<recipe>.*)\\.",de:"Du hast mit der Testsynthese von (?<recipe>.*) begonnen\\.",fr:"Vous commencez une synthèse d'essai pour une? (?<recipe>.*)\\.",ja:"(?<player>\\y{Name})は(?<recipe>.*)の製作練習を開始した。",cn:"(?<player>\\y{Name})开始练习制作(?<recipe>.*)。",ko:"(?<recipe>.*) 제작 연습을 시작합니다\\."},craftingFinish:{en:"You synthesize (?<count>(an?|\\d+) )?(?<recipe>.*)()?\\.",de:"Du hast erfolgreich (?<count>(ein(e|es|em|er)?|\\d+) )?(?<recipe>.*)()? hergestellt\\.",fr:"Vous fabriquez (?<count>(une?|\\d+) )?(?<recipe>.*)()?\\.",ja:"(?<player>\\y{Name})は(?<recipe>.*)()?(×(?<count>\\d+))?を完成させた！",cn:"(?<player>\\y{Name})制作“(?<recipe>.*)()?”(×(?<count>\\d+))?成功！",ko:"(?<player>\\y{Name}) 님이 (?<recipe>.*)()?(×(?<count>\\d+)개)?(을|를) 완성했습니다!"},trialCraftingFinish:{en:"Your trial synthesis of (?<recipe>.*) proved a success!",de:"Die Testsynthese von (?<recipe>.*) war erfolgreich!",fr:"Votre synthèse d'essai pour fabriquer (?<recipe>.*) a été couronnée de succès!",ja:"(?<player>\\y{Name})は(?<recipe>.*)の製作練習に成功した！",cn:"(?<player>\\y{Name})练习制作(?<recipe>.*)成功了！",ko:"(?<recipe>.*) 제작 연습에 성공했습니다!"},craftingFail:{en:"Your synthesis fails!",de:"Deine Synthese ist fehlgeschlagen!",fr:"La synthèse échoue\\.{3}",ja:"(?<player>\\y{Name})は製作に失敗した……",cn:"(?<player>\\y{Name})制作失败了……",ko:"제작에 실패했습니다……\\."},trialCraftingFail:{en:"Your trial synthesis of (?<recipe>.*) failed\\.{3}",de:"Die Testsynthese von (?<recipe>.*) ist fehlgeschlagen\\.{3}",fr:"Votre synthèse d'essai pour fabriquer (?<recipe>.*) s'est soldée par un échec\\.{3}",ja:"(?<player>\\y{Name})は(?<recipe>.*)の製作練習に失敗した……",cn:"(?<player>\\y{Name})练习制作(?<recipe>.*)失败了……",ko:"(?<recipe>.*) 제작 연습에 실패했습니다……\\."},craftingCancel:{en:"You cancel the synthesis\\.",de:"Du hast die Synthese abgebrochen\\.",fr:"La synthèse est annulée\\.",ja:"(?<player>\\y{Name})は製作を中止した。",cn:"(?<player>\\y{Name})中止了制作作业。",ko:"제작을 중지했습니다\\."},trialCraftingCancel:{en:"You abandoned trial synthesis\\.",de:"Testsynthese abgebrochen\\.",fr:"Vous avez interrompu la synthèse d'essai\\.",ja:"(?<player>\\y{Name})は製作練習を中止した。",cn:"(?<player>\\y{Name})停止了练习。",ko:"제작 연습을 중지했습니다\\."}};class RegexSet{constructor(){w(this,"regexes");w(this,"netRegexes")}get localeRegex(){return this.regexes?this.regexes:(this.regexes=this.buildLocaleRegexes(localeLines,t=>Regexes$1.gameLog({line:`${t}.*?`})),this.regexes)}get localeNetRegex(){return this.netRegexes?this.netRegexes:(this.netRegexes=this.buildLocaleRegexes(localeLines,t=>NetRegexes$1.gameLog({line:`${t}[^|]*?`})),this.netRegexes)}buildLocaleRegexes(t,o){return Object.fromEntries(Object.entries(t).map(([l,i])=>[l,this.buildLocaleRegex(i,o)]))}buildLocaleRegex(t,o){const l=o(t.en);return{en:l,de:t.de!==void 0?o(t.de):l,fr:t.fr!==void 0?o(t.fr):l,ja:t.ja!==void 0?o(t.ja):l,cn:t.cn!==void 0?o(t.cn):l,ko:t.ko!==void 0?o(t.ko):l}}}const regexSet=new RegexSet;regexSet.localeRegex;const LocaleNetRegex=regexSet.localeNetRegex,_sfc_main=defineComponent({__name:"obs",setup(e){var j;const t=[ContentType$1.DutyRoulette,ContentType$1.Dungeons,ContentType$1.DeepDungeons,ContentType$1.VCDungeonFinder,ContentType$1.Pvp,ContentType$1.Trials,ContentType$1.Raids,ContentType$1.UltimateRaids],o={Default:"default",UltimateOrRaidOrTrials:"ultimateOrRaidOrTrials",VcOrDeepDungeons:"vcOrDeepDungeons",Pvp:"pvp"},l=(j=JSON.parse(window.localStorage.getItem("obs2-data")??"{}"))==null?void 0:j.password,i=useStorage("obs-passwd",l??""),a=useStorage("aster-obs-config",{host:"4455",greaterThan:0,userRecFilePath:"",suffixByZone:!0,inCombatStart:!0,autoForZones:t,recFilePaths:Object.fromEntries(Object.values(o).map(f=>[f,""]))});a.value.host=a.value.host.replace(/^.+?:/,"");const n={partyLength:1,inACTCombat:!1,zoneID:0,zoneName:"Unknown",zoneType:o.Default,reason:""},s=reactive({connected:!1,recording:!1}),r=new json_default,u=ref(!1),d=ref(!0),g=ref(!1),h={...UserConfig$1.getDefaultBaseOptions()},y=window.location.href.includes("?dev=1")?console.log:()=>{};async function S(f=!1){return r.connect(`ws://127.0.0.1:${a.value.host}`,i.value).then(()=>(a.value.userRecFilePath||D(),r.call("GetRecordStatus").then(c=>{s.recording=c.outputActive}),VXETable.modal.message({content:"连接成功",status:"success",width:"7rem",size:"mini",top:8}),s.connected=!0,d.value=!1,u.value=!0,Promise.resolve(!0))).catch(()=>(s.connected=!1,f?VXETable.modal.message({content:"连接失败",status:"error",width:"7rem",size:"mini",top:8}):d.value=!1,Promise.resolve(!1)))}async function D(){return r.call("GetRecordDirectory").then(f=>{f.recordDirectory&&(a.value.userRecFilePath=f.recordDirectory,a.value.recFilePaths.default===""&&(a.value.recFilePaths.default=f.recordDirectory))})}async function R(f=!1){var b;if(!s.connected&&!await S())return Promise.resolve(!1);let c=a.value.userRecFilePath,k="";a.value.suffixByZone&&(k="%CCYY-%MM-%DD %hh-%mm-%ss"),f||(k&&(k+=` ${n.zoneName.replaceAll(":","_")}`),a.value.userRecFilePath||await D(),c=(b=a.value.recFilePaths[n.zoneType])==null?void 0:b.trim(),c||(c=a.value.recFilePaths.default));const p=[];return c!==""&&(y("[setFolder] ",{revert:f,recFilePath:c}),p.push({requestType:"SetProfileParameter",requestData:{parameterCategory:"SimpleOutput",parameterName:"FilePath",parameterValue:c}}),p.push({requestType:"SetProfileParameter",requestData:{parameterCategory:"AdvOut",parameterName:"RecFilePath",parameterValue:c}})),k!==""&&(y("[setName] ",{revert:f,filenameFormatting:k}),p.push({requestType:"SetProfileParameter",requestData:{parameterCategory:"Output",parameterName:"FilenameFormatting",parameterValue:k}})),p.length>0?r.callBatch(p):Promise.resolve(!0)}async function C(f,c=!0,k=!1){y("[obs_start_prepare] ",{recording:s.recording,data:n,reason:f,restart:c,justDoIt:k});try{if(n.reason==="countDown"&&(n.reason=f),!k&&n.partyLength<=a.value.greaterThan)return Promise.resolve(!0);if(!s.connected&&!await S())return Promise.resolve(!1);if(s.recording&&!c)return Promise.resolve(!0);if(n.reason=f,s.recording&&c&&(await r.call("StopRecord"),await new Promise(p=>setTimeout(p,2e3))),await R(!1)!==!1)return await new Promise(p=>setTimeout(p,500)),y("[obs_start] ",{recording:s.recording,data:n,reason:f,restart:c,justDoIt:k}),r.call("StartRecord").then(()=>setTimeout(()=>R(!0),2e3))}catch(p){console.warn(["obs_start_error"],p)}return Promise.resolve(!1)}async function T(f=""){return y("[obs_stop] ",{recording:s.recording,data:n,reason:f}),s.recording?r.call("StopRecord"):Promise.resolve(!0)}function _(){s.connected=!1}function E(f){switch(f.outputState){case"OBS_WEBSOCKET_OUTPUT_STARTED":s.recording=!0;return;case"OBS_WEBSOCKET_OUTPUT_STOPPED":s.recording=!1}}function v(f){return commonNetRegex.wipe.test(f)||/^41\|[^|]*\|[^|]*\|7DE\|/.test(f)}function O(f){return LocaleNetRegex.countdownStart[h.ParserLanguage].test(f)}function N(f){return LocaleNetRegex.countdownCancel[h.ParserLanguage].test(f)}async function A(f){if(s.recording){if(v(f.rawLine))return T("wipe");if(n.reason==="countDown"&&N(f.rawLine))return T("countDown")}else if(O(f.rawLine))return C("countDown",!1);return Promise.resolve()}async function $(f){if(n.zoneID===f.zoneID)return Promise.resolve();n.zoneID=f.zoneID,n.zoneName=f.zoneName,n.zoneType=o.Default;const c=zoneInfo[f.zoneID];return!c||!c.contentType?(y(["changeZone"],{data:n,ev:f}),T("changeZone")):(n.zoneName=c.name[h.ParserLanguage]??f.zoneName,n.zoneType=L(c),y(["changeZone"],{data:n,ev:f}),a.value.autoForZones.includes(c.contentType)?C("changeZone",!1):T("changeZone"))}function L(f){var c,k;switch(f.contentType){case ContentType$1.UltimateRaids:return o.UltimateOrRaidOrTrials;case ContentType$1.Pvp:return o.Pvp;case ContentType$1.DeepDungeons:case ContentType$1.VCDungeonFinder:return o.VcOrDeepDungeons;case ContentType$1.Trials:if((c=f.name.fr)!=null&&c.includes("(extrême)"))return o.UltimateOrRaidOrTrials;break;case ContentType$1.Raids:if((k=f.name.en)!=null&&k.includes("(Savage)"))return o.UltimateOrRaidOrTrials;break}return o.Default}const V=async f=>{if(!a.value.inCombatStart)return Promise.resolve();const c=n.inACTCombat;if(n.inACTCombat=f.detail.inACTCombat,y(["InCombatChanged"],{now:f.detail.inACTCombat,prev:c,zoneName:n.zoneName,recording:s.recording}),await new Promise(b=>setTimeout(b,500)),!c&&f.detail.inACTCombat)return C("inCombat",!1);const k=zoneInfo[n.zoneID],p=a.value.autoForZones.includes((k==null?void 0:k.contentType)??0);return c&&!f.detail.inACTCombat&&n.reason==="inCombat"&&!p?T("inCombat"):Promise.resolve()},I=f=>{var c;n.partyLength=((c=f.party)==null?void 0:c.length)||1};function F(f){u.value=f!=="settings",d.value=f==="settings"}return onMounted(async()=>{r.on("ExitStarted",_),r.on("ConnectionClosed",_),r.on("ConnectionError",_),r.on("RecordStateChanged",E),UserConfig$1.getUserConfigLocation("obs",h,()=>{addOverlayListener("LogLine",A),addOverlayListener("ChangeZone",$),addOverlayListener("onInCombatChangedEvent",V),addOverlayListener("PartyChanged",I)}),i.value!==""?await S(!0):VXETable.modal.alert({content:"先锁定悬浮窗，再填写端口与密码",title:"初次使用",width:"80%",size:"mini"})}),(f,c)=>{const k=resolveComponent("vxe-button"),p=resolveComponent("vxe-form-item"),b=resolveComponent("vxe-input"),P=resolveComponent("vxe-switch"),x=resolveComponent("vxe-checkbox"),B=resolveComponent("vxe-checkbox-group"),M=resolveComponent("vxe-form");return openBlock(),createElementBlock(Fragment,null,[withDirectives(createBaseVNode("header",null,[createBaseVNode("div",null,[withDirectives(createBaseVNode("i",{class:"vxe-icon-dot icon",style:normalizeStyle({color:unref(s).recording?"red":"gray",textShadow:"0px  0px 3px black",margin:"1px"})},null,4),[[vShow,unref(s).connected]]),withDirectives(createVNode(k,{class:"btns",icon:"vxe-icon-caret-right",onClick:c[0]||(c[0]=m=>C("manual",!1,!0))},null,512),[[vShow,unref(s).connected&&!unref(s).recording]]),withDirectives(createVNode(k,{class:"btns",icon:"vxe-icon-close",size:"mini",onClick:c[1]||(c[1]=m=>T("manual"))},null,512),[[vShow,unref(s).connected&&unref(s).recording]]),withDirectives(createVNode(k,{class:"btns",icon:"vxe-icon-cut",size:"mini",onClick:c[2]||(c[2]=m=>C("manual",!0,!0))},null,512),[[vShow,unref(s).connected&&unref(s).recording]]),createVNode(k,{class:"btns settings",icon:"vxe-icon-setting",size:"mini",onClick:c[3]||(c[3]=m=>F("settings"))})])],512),[[vShow,unref(u)]]),withDirectives(createBaseVNode("main",null,[createVNode(M,{data:unref(a),"collapse-status":!unref(g),"custom-layout":"",size:"mini"},{default:withCtx(()=>[withDirectives(createVNode(p,{span:"24","class-name":"hidePageBtn"},{default:withCtx(()=>[createVNode(k,{size:"mini",content:"隐藏页面",icon:"vxe-icon-eye-fill-close",onClick:c[4]||(c[4]=m=>F("header"))})]),_:1},512),[[vShow,unref(d)]]),createVNode(p,{span:"24",field:"host",title:"OBS服务器端口"},{default:withCtx(()=>[createVNode(b,{modelValue:unref(a).host,"onUpdate:modelValue":c[5]||(c[5]=m=>unref(a).host=m),type:"number",size:"small",style:{width:"70%","margin-right":"-5px"}},null,8,["modelValue"]),createVNode(k,{content:"无法输入",size:"mini",icon:"vxe-icon-question",type:"text",status:"info",onClick:c[6]||(c[6]=m=>unref(VXETable).modal.message({content:"先点击ACT，再点击悬浮窗，即可正常输入"}))})]),_:1}),createVNode(p,{span:"24",field:"password",title:"OBS服务器密码"},{default:withCtx(()=>[createVNode(b,{modelValue:unref(i),"onUpdate:modelValue":c[7]||(c[7]=m=>isRef(i)?i.value=m:null),size:"small",placeholder:"密码",type:"password"},null,8,["modelValue"])]),_:1}),createVNode(p,{span:"24",field:"inCombatStart",title:"进入战斗自动录制"},{default:withCtx(()=>[createVNode(P,{modelValue:unref(a).inCombatStart,"onUpdate:modelValue":c[8]||(c[8]=m=>unref(a).inCombatStart=m),"open-label":"是","close-label":"否"},null,8,["modelValue"])]),_:1}),createVNode(p,{span:"24",field:"suffixByZone",title:"录像文件名添加副本名后缀"},{default:withCtx(()=>[createVNode(P,{modelValue:unref(a).suffixByZone,"onUpdate:modelValue":c[9]||(c[9]=m=>unref(a).suffixByZone=m),"open-label":"是","close-label":"否"},null,8,["modelValue"])]),_:1}),createVNode(p,{span:"24",field:"greaterThan",title:"小队多于"},{default:withCtx(()=>[createVNode(b,{modelValue:unref(a).greaterThan,"onUpdate:modelValue":c[10]||(c[10]=m=>unref(a).greaterThan=m),size:"small",type:"integer",min:"0",max:"8",style:{width:"3rem"}},null,8,["modelValue"]),createTextVNode(" 人自动录制（8:永不自动） ")]),_:1}),createVNode(p,{span:"24",field:"autoForZones",title:"进入区域自动录制","class-name":"zoneAuto",folding:"","title-overflow":""},{default:withCtx(()=>[createVNode(B,{modelValue:unref(a).autoForZones,"onUpdate:modelValue":c[11]||(c[11]=m=>unref(a).autoForZones=m)},{default:withCtx(()=>[createVNode(x,{label:unref(ContentType$1).UltimateRaids,content:"绝境战"},null,8,["label"]),createVNode(x,{label:unref(ContentType$1).Raids,content:"大型Raid"},null,8,["label"]),createVNode(x,{label:unref(ContentType$1).Trials,content:"讨伐战"},null,8,["label"]),createVNode(x,{label:unref(ContentType$1).VCDungeonFinder,content:"异闻迷宫"},null,8,["label"]),createVNode(x,{label:unref(ContentType$1).DeepDungeons,content:"深层迷宫"},null,8,["label"]),createVNode(x,{label:unref(ContentType$1).Dungeons,content:"4人迷宫"},null,8,["label"]),createVNode(x,{label:unref(ContentType$1).Pvp,content:"PVP"},null,8,["label"])]),_:1},8,["modelValue"])]),_:1}),createVNode(p,{span:"24",title:"录像目录（须保证目录存在，可留空）",folding:""}),createVNode(p,{span:"24",title:"默认",folding:"","class-name":"recPaths"},{default:withCtx(()=>[createVNode(b,{modelValue:unref(a).recFilePaths.default,"onUpdate:modelValue":c[12]||(c[12]=m=>unref(a).recFilePaths.default=m),size:"small",placeholder:"留空则使用OBS录像目录",spellcheck:"false"},null,8,["modelValue"])]),_:1}),createVNode(p,{span:"24",title:"高难",folding:"","class-name":"recPaths"},{default:withCtx(()=>[createVNode(b,{modelValue:unref(a).recFilePaths.ultimateOrRaidOrTrials,"onUpdate:modelValue":c[13]||(c[13]=m=>unref(a).recFilePaths.ultimateOrRaidOrTrials=m),size:"small",placeholder:"绝&零式&极神",spellcheck:"false"},null,8,["modelValue"])]),_:1}),createVNode(p,{span:"24",title:"深层",folding:"","class-name":"recPaths"},{default:withCtx(()=>[createVNode(b,{modelValue:unref(a).recFilePaths.vcOrDeepDungeons,"onUpdate:modelValue":c[14]||(c[14]=m=>unref(a).recFilePaths.vcOrDeepDungeons=m),size:"small",placeholder:"深层&异闻迷宫",spellcheck:"false"},null,8,["modelValue"])]),_:1}),createVNode(p,{span:"24",title:"PVP",folding:"","class-name":"recPaths"},{default:withCtx(()=>[createVNode(b,{modelValue:unref(a).recFilePaths.pvp,"onUpdate:modelValue":c[15]||(c[15]=m=>unref(a).recFilePaths.pvp=m),size:"small",placeholder:"玩家对战",spellcheck:"false"},null,8,["modelValue"])]),_:1}),createVNode(p,{span:"24","collapse-node":""},{default:withCtx(()=>[createVNode(k,{size:"mini",status:"primary",icon:"vxe-icon-swap",content:"连接",onClick:c[16]||(c[16]=m=>S(!0))})]),_:1})]),_:1},8,["data","collapse-status"])],512),[[vShow,unref(d)]])],64)}}}),obs_vue_vue_type_style_index_0_lang="";export{_sfc_main as default};
