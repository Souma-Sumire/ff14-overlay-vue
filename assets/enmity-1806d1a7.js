import{_ as e}from"./ActWrapper-e3037e7f.js";import{d as t,r as n,o as a,aO as o,g as r,j as i,n as s,w as m,v as u,u as l,f as c}from"./index-fc245f0d.js";import{t as d}from"./tts-5e313398.js";import{U as f}from"./util-3591e9ca.js";import{N as p}from"./netregexes-1517cb15.js";import{a as w,r as b,c as v}from"./overlay_plugin_api-974cdd44.js";import{d as g}from"./index-d45555b3.js";import{_ as h}from"./_plugin-vue_export-helper-6a8c15be.js";import"./el-card-abfa9915.js";import"./useDev-205d3359.js";import"./useDemo-a422fbc1.js";import"./regexes-da03e94d.js";const C=h(t({__name:"enmity",setup(t){let h=0;const C=n([]),T=g("hash"),y=n(!1),j=[f.iconToJobEnum("Paladin"),f.iconToJobEnum("Warrior"),f.iconToJobEnum("DarkKnight"),f.iconToJobEnum("Gunbreaker")],I=[2843,3124,743,1833];let _,P;const E={countdown:p.countdown(),countdownCancel:p.countdownCancel(),wipe:p.network6d({command:["40000010","4000000F"]}),inCombat:p.inCombat()};async function L(){const e=(await v({call:"getCombatants"})).combatants.filter(e=>C.value.some(t=>Number.parseInt(t.id,16)===e.ID&&t.inParty)),t=e.find(e=>e.ID===h)?.Job;if(void 0===t)return x(),y.value=!1,Promise.reject(new Error("未找到玩家职业"));if(!j.includes(t))return x(),y.value=!1,Promise.reject(new Error("玩家不是坦克职业"));return{enmityTanks:e.filter(e=>e.Effects.some(e=>I.includes(e.BuffID))),partyCombatState:e}}function k(){x(),_=window.setInterval(()=>{L().then(({enmityTanks:e})=>{0!==e.length?y.value=!1:y.value=!0}).catch(()=>{y.value=!1})},500)}function x(){P&&clearTimeout(P),_&&clearInterval(_)}const D=e=>{const t=E.countdown.exec(e.rawLine)?.groups?.countdownTime;if(void 0!==t)k(),P=window.setTimeout(()=>{L().then(({enmityTanks:e})=>{2===e.length&&d("双T都开盾了"),0===e.length&&d("没人开盾")}).catch(()=>{y.value=!1})},1e3*(Number.parseInt(t)-10));else if(E.countdownCancel.test(e.rawLine))x(),y.value=!1;else if(E.wipe.test(e.rawLine))x(),y.value=!1;else if(E.inCombat.test(e.rawLine)){if("false"===T.stRemind)return;const{inACTCombat:t,inGameCombat:n}=E.inCombat.exec(e.rawLine).groups||{};"1"===t&&"1"===n&&(k(),P=window.setTimeout(()=>{L().then(({enmityTanks:e,partyCombatState:t})=>{2===t.filter(e=>f.isTankJob(f.jobEnumToJob(e.Job))).length&&1===e.length&&e[0]?.ID!==h&&d("ST开盾")}).catch(()=>{y.value=!1})},2e4))}},J=e=>{C.value=e.party},A=e=>{h=e.charID};return a(()=>{w("LogLine",D),w("PartyChanged",J),w("ChangePrimaryPlayer",A)}),o(()=>{_&&clearInterval(_),P&&clearTimeout(P),b("LogLine",D),b("PartyChanged",J),b("ChangePrimaryPlayer",A)}),(t,n)=>{const a=e;return s(),r(a,null,{default:i(()=>[m(c("strong",null,"没人开盾",512),[[u,l(y)]])]),_:1})}}}),[["__scopeId","data-v-55dd9f0d"]]);export{C as default};
