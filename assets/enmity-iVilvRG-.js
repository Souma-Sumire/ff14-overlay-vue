import"./index-KL9ykxN2.js";/* empty css                */import{t as e,r as t,f as a,P as n,v as r,x as o,D as s,H as i,F as l,u,E as c,A as m,K as d,O as f,L as v}from"./vue-vendor-wZ_5aAzA.js";import{U as p,i as b}from"./util-BKsnXaYI.js";import{N as h}from"./netregexes-r2K2MLa5.js";import{a as g,r as w,c as y}from"./overlay_plugin_api-DU1DlPio.js";import{b as C}from"./index-CKUOrbjt.js";import{r as T}from"./element-plus-8--zztY3.js";import{_ as P}from"./_plugin-vue_export-helper-BCo6x5W8.js";const j=P(e({__name:"enmity",setup(e){let P=0;const j=t([]),_=t(!1),I=C("hash"),L="1"===I.dev,k=t(!1),x=[b.Paladin,b.Warrior,b.DarkKnight,b.Gunbreaker],D=[2843,3124,743,1833];function E(){return L?Promise.resolve():new Promise((e=>{y({call:"cactbotRequestState"}).then((()=>{_.value=!0,e()})),setTimeout((()=>{_.value||E()}),3e3)}))}let J,S;const A={countdown:h.countdown(),countdownCancel:h.countdownCancel(),wipe:h.network6d({command:["40000010","4000000F"]}),inCombat:h.inCombat()};async function F(){var e;const t=(await y({call:"getCombatants"})).combatants.filter((e=>j.value.some((t=>Number.parseInt(t.id,16)===e.ID&&t.inParty)))),a=null==(e=t.find((e=>e.ID===P)))?void 0:e.Job;if(void 0===a)return N(),k.value=!1,Promise.reject(new Error("未找到玩家职业"));if(!x.includes(a))return N(),k.value=!1,Promise.reject(new Error("玩家不是坦克职业"));return{enmityTanks:t.filter((e=>e.Effects.some((e=>D.includes(e.BuffID))))),partyCombatState:t}}function G(){N(),J=setInterval((()=>{F().then((({enmityTanks:e})=>{0!==e.length?k.value=!1:k.value=!0})).catch((()=>{k.value=!1}))}),500)}function N(){S&&clearTimeout(S),J&&clearInterval(J)}function K(e){y({call:"cactbotSay",text:e})}const R=e=>{var t,a;const n=null==(a=null==(t=A.countdown.exec(e.rawLine))?void 0:t.groups)?void 0:a.countdownTime;if(void 0!==n)G(),S=setTimeout((()=>{F().then((({enmityTanks:e})=>{2===e.length&&K("双T都开盾了"),0===e.length&&K("没人开盾")})).catch((()=>{k.value=!1}))}),1e3*(Number.parseInt(n)-10));else if(A.countdownCancel.test(e.rawLine))N(),k.value=!1;else if(A.wipe.test(e.rawLine))N(),k.value=!1;else if(A.inCombat.test(e.rawLine)){if("false"===I.stRemind)return;const{inACTCombat:t,inGameCombat:a}=A.inCombat.exec(e.rawLine).groups||{};"1"===t&&"1"===a&&(G(),S=setTimeout((()=>{F().then((({enmityTanks:e,partyCombatState:t})=>{2===t.filter((e=>p.isTankJob(p.jobEnumToJob(e.Job)))).length&&1===e.length&&e[0].ID!==P&&K("ST开盾")})).catch((()=>{k.value=!1}))}),2e4))}},q=e=>{j.value=e.party},B=e=>{P=e.charID};return a((()=>{E(),g("LogLine",R),g("PartyChanged",q),g("ChangePrimaryPlayer",B)})),n((()=>{J&&clearInterval(J),S&&clearTimeout(S),w("LogLine",R),w("PartyChanged",q),w("ChangePrimaryPlayer",B)})),(e,t)=>{const a=T;return o(),r(v,null,[!u(_)||L?(o(),s(a,{key:0},{default:c((()=>t[0]||(t[0]=[m("h1",null,d("在 ACT 中添加本页面作为数据统计悬浮窗"),-1)]))),_:1,__:[0]})):i("",!0),l(m("strong",null,"没人开盾",512),[[f,u(k)]])],64)}}}),[["__scopeId","data-v-a2dfc2bb"]]);export{j as default};
